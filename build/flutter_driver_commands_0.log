2023-03-05 22:29:39.108750 >>> {command: get_health}
2023-03-05 22:29:39.197271 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:39.198553 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-05 22:29:40.564115 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:40.567354 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-05 22:29:40.827717 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:40.833757 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-05 22:29:40.843502 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:40.848311 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:29:40.970388 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:40.971951 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:29:41.411767 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:41.413166 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-05 22:29:41.417748 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:41.419941 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:29:41.467808 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:41.468334 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:29:41.520707 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:41.520892 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-05 22:29:42.211173 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:42.212966 >>> {command: enter_text, text: }
2023-03-05 22:29:42.224250 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:42.224856 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:29:43.307367 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:43.308390 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-05 22:29:44.332141 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:44.332845 >>> {command: get_text, finderType: ByText, text: Somthin wrong happens!}
2023-03-05 22:29:45.348833 <<< {isError: false, response: {text: Somthin wrong happens!}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:45.351618 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:29:46.442651 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:46.443581 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:29:47.465837 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:47.466904 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-05 22:29:48.518981 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:48.519989 >>> {command: enter_text, text: Selena}
2023-03-05 22:29:48.541242 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:48.541874 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:29:49.554122 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:49.554599 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-05 22:29:50.567473 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:50.570963 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:29:51.646254 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:51.647191 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:29:52.683212 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:52.683972 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-05 22:29:53.728244 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:53.728774 >>> {command: enter_text, text: Selena}
2023-03-05 22:29:53.736413 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:53.737161 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:29:54.752231 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:54.752894 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-05 22:29:55.762359 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:29:55.762862 >>> {command: tap, finderType: ByType, type: Column}
2023-03-05 22:29:56.843332 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:28.178253 >>> {command: get_health}
2023-03-05 22:30:28.258361 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:28.259443 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-05 22:30:29.852107 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:29.858452 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-05 22:30:29.937123 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:29.942292 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-05 22:30:29.947107 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:29.948050 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:30:30.058711 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:30.059910 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:30:30.457990 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:30.458650 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-05 22:30:30.464027 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:30.465446 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:30:30.510841 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:30.511095 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:30:30.563324 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:30.564042 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-05 22:30:31.153772 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:31.155408 >>> {command: enter_text, text: }
2023-03-05 22:30:31.166877 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:31.167243 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:30:32.253815 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:32.255231 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-05 22:30:33.282394 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:33.283293 >>> {command: get_text, finderType: ByText, text: Somthin wrong happens!}
2023-03-05 22:30:34.299661 <<< {isError: false, response: {text: Somthin wrong happens!}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:34.301328 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:30:35.389373 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:35.389888 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:30:36.395939 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:36.396823 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-05 22:30:37.453458 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:37.454622 >>> {command: enter_text, text: Selena}
2023-03-05 22:30:37.476349 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:37.477002 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:30:38.525942 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:38.526461 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-05 22:30:39.547748 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:39.550891 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:30:40.567133 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:40.567903 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:30:41.580045 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:41.581337 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-05 22:30:42.652001 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:42.652801 >>> {command: enter_text, text: Selena}
2023-03-05 22:30:42.659665 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:42.660604 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:30:43.685739 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:43.686481 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-05 22:30:44.696464 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:30:44.697066 >>> {command: tap, finderType: ByType, type: Column}
2023-03-05 22:30:45.767924 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:31:51.887282 >>> {command: get_health}
2023-03-05 22:31:51.982666 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:31:51.983695 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-05 22:31:53.589079 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:31:53.596409 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-05 22:31:53.672606 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:31:53.677479 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-05 22:31:53.682153 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:31:53.683059 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:31:53.786970 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:31:53.787794 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:31:54.212508 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:31:54.213142 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-05 22:31:54.218321 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:31:54.219818 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:31:54.265739 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:31:54.265976 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:31:54.317952 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:31:54.318723 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-05 22:31:54.966106 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:31:54.967804 >>> {command: enter_text, text: }
2023-03-05 22:31:54.978854 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:31:54.979789 >>> {command: waitForAbsent, finderType: ByText, text: Somthin wrong happens!}
2023-03-05 22:32:24.259746 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:32:24.614858 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:24.615343 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:32:25.657521 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:25.659062 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:32:25.661695 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:25.662491 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-05 22:32:54.000752 >>> {command: get_health}
2023-03-05 22:32:54.086521 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:54.087599 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-05 22:32:55.695978 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:55.701845 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-05 22:32:55.778842 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:55.785050 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-05 22:32:55.790284 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:55.791481 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:32:55.897046 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:55.898125 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:32:56.359296 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:56.359857 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-05 22:32:56.364700 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:56.366154 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:32:56.412550 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:56.412802 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:32:56.466709 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:56.467516 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-05 22:32:57.168843 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:57.170580 >>> {command: enter_text, text: }
2023-03-05 22:32:57.181646 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:57.182718 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:32:58.271707 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:58.272682 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-05 22:32:59.295475 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:32:59.296012 >>> {command: get_text, finderType: ByText, text: Somthin wrong happens!}
2023-03-05 22:33:00.316983 <<< {isError: false, response: {text: Somthin wrong happens!}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:33:00.319311 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:33:01.408946 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:33:01.409836 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:33:02.432978 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:33:02.433500 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-05 22:33:03.485359 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:33:03.486183 >>> {command: enter_text, text: Selena}
2023-03-05 22:33:03.506978 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:33:03.507665 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:33:04.520130 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:33:04.521001 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-05 22:33:05.532944 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:33:05.535429 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:33:06.610283 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:33:06.610972 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-05 22:33:07.628 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:33:07.628392 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-05 22:33:08.685663 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:33:08.686445 >>> {command: enter_text, text: Selena}
2023-03-05 22:33:08.738918 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:33:08.739376 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-05 22:33:09.703768 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:33:09.704436 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-05 22:33:10.713626 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-05 22:33:10.714301 >>> {command: tap, finderType: ByType, type: Column}
2023-03-05 22:33:11.787675 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:33:07.636756 >>> {command: get_health}
2023-03-06 12:33:07.728108 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:33:07.730683 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 12:33:09.278292 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:33:09.289817 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 12:33:09.872928 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:33:09.880119 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 12:33:39.334317 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:33:39.521567 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:33:39.522752 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 12:33:40.034123 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:33:40.034914 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 12:33:40.041866 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:33:40.046013 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:33:40.112509 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:33:40.113254 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 12:33:40.148217 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:33:40.148623 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 12:33:40.769643 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:33:40.771753 >>> {command: enter_text, text: }
2023-03-06 12:33:40.782855 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:33:40.783638 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:33:41.869584 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:33:41.870463 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 12:33:42.887989 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:33:42.888759 >>> {command: get_text, finderType: ByText, text: Somthin wrong happens!}
2023-03-06 12:34:10.055689 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:34:10.512031 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:34:10.512916 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 12:34:11.535231 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:34:11.536376 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 12:34:12.591666 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:34:12.592829 >>> {command: enter_text, text: Selena}
2023-03-06 12:34:12.615944 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:34:12.616641 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:34:13.689136 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:34:13.689623 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 12:34:14.717314 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:34:14.720551 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:34:15.807420 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:34:15.808529 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 12:34:16.833983 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:34:16.835574 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 12:34:17.920354 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:34:17.921350 >>> {command: enter_text, text: Selena}
2023-03-06 12:34:17.926851 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:34:17.927385 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:34:18.978266 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:34:18.978769 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 12:34:20.003730 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:34:20.004843 >>> {command: tap, finderType: ByType, type: Column}
2023-03-06 12:36:07.685006 >>> {command: get_health}
2023-03-06 12:36:07.768900 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:07.770014 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 12:36:09.405536 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:09.410780 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 12:36:09.488469 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:09.493284 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 12:36:09.498679 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:09.499560 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:36:09.604234 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:09.605728 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 12:36:10.035233 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:10.035871 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 12:36:10.041043 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:10.042656 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:36:10.086610 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:10.086825 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 12:36:10.091297 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:10.091734 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 12:36:10.201510 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:10.203435 >>> {command: enter_text, text: }
2023-03-06 12:36:10.351518 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:10.351925 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:36:11.301894 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:11.303549 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 12:36:12.334074 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:12.337353 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:36:13.362235 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:13.363289 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 12:36:14.369785 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:14.370809 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 12:36:15.467502 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:15.468408 >>> {command: enter_text, text: Selena}
2023-03-06 12:36:15.486080 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:15.486762 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:36:16.530580 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:16.531435 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 12:36:17.555379 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:17.557562 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:36:18.636874 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:18.638622 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 12:36:19.670563 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:19.671812 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 12:36:20.721961 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:20.722981 >>> {command: enter_text, text: Selena}
2023-03-06 12:36:20.729151 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:20.729775 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:36:21.824317 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:36:21.825264 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 12:36:22.849617 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:42.669930 >>> {command: get_health}
2023-03-06 12:50:42.754304 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:42.755390 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 12:50:44.085431 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:44.088379 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 12:50:44.353783 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:44.359073 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 12:50:44.366374 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:44.367839 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:50:44.481102 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:44.482394 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 12:50:44.864886 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:44.866039 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 12:50:44.870206 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:44.871941 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:50:44.916367 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:44.916601 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 12:50:44.957222 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:44.957674 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 12:50:45.673384 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:45.675050 >>> {command: enter_text, text: }
2023-03-06 12:50:45.685014 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:45.685793 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:50:46.769331 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:46.770344 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 12:50:47.791804 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:47.794460 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:50:48.883099 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:48.884020 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 12:50:49.910670 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:49.911893 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 12:50:50.963498 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:50.964566 >>> {command: enter_text, text: Selena}
2023-03-06 12:50:50.987805 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:50.988235 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:50:52.068536 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:52.069381 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 12:50:53.096141 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:50:53.097477 >>> {command: tap, finderType: ByType, type: AppStateWidget}
2023-03-06 12:51:17.837753 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:51:18.683275 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:51:18.683941 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 12:51:19.710548 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:51:19.711430 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 12:51:20.805829 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:51:20.806559 >>> {command: enter_text, text: Selena}
2023-03-06 12:51:20.812126 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:51:20.812677 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 12:51:21.865665 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 12:51:21.867010 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 12:51:22.927518 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:30.775425 >>> {command: get_health}
2023-03-06 13:06:30.871652 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:30.873488 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 13:06:32.626224 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:32.636365 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 13:06:32.734071 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:32.742120 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 13:06:32.748232 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:32.750500 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:06:32.874987 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:32.877449 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 13:06:33.315770 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:33.316274 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 13:06:33.321755 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:33.323114 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:06:33.371291 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:33.371701 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 13:06:33.418745 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:33.419429 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 13:06:34.770975 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:34.772712 >>> {command: enter_text, text: }
2023-03-06 13:06:34.782984 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:34.783683 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:06:35.864940 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:35.866626 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 13:06:36.891169 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:36.893800 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:06:37.918725 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:37.919871 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 13:06:38.921189 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:38.921672 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 13:06:40.025295 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:40.026074 >>> {command: enter_text, text: Selena}
2023-03-06 13:06:40.046887 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:40.047324 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:06:41.091441 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:41.091992 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 13:06:42.112069 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:06:42.114335 >>> {command: waitFor, finderType: ByType, type: ArtistWidget}
2023-03-06 13:06:42.621190 >>> {command: scroll, finderType: ByType, type: AppStateWidget, dx: 0.0, dy: 0.0, duration: 100000, frequency: 60}
2023-03-06 13:06:43.197857 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:07:06.932028 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:07:07.778632 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:07:07.779538 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 13:07:08.811655 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:07:08.812381 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 13:07:09.903068 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:07:09.903483 >>> {command: enter_text, text: Selena}
2023-03-06 13:07:09.991093 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:07:09.991699 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:07:10.952546 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:07:10.953017 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 13:07:11.973921 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:21:10.988652 >>> {command: get_health}
2023-03-06 13:21:11.074267 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:21:11.077082 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 13:21:12.679099 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:21:12.688791 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:21:12.859044 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:21:12.860895 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 13:21:13.244825 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:21:13.245350 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 13:21:13.352953 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:21:13.354209 >>> {command: enter_text, text: Selena}
2023-03-06 13:21:13.373231 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:21:13.373729 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:21:14.475483 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:21:14.477193 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 13:21:15.537834 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:23:21.237698 >>> {command: get_health}
2023-03-06 13:23:21.328745 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:23:21.330617 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 13:23:23.022290 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:23:23.027513 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:23:23.197240 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:23:23.199833 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 13:23:23.610405 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:23:23.610891 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 13:23:23.712228 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:23:23.713911 >>> {command: enter_text, text: Selena}
2023-03-06 13:23:23.732546 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:23:23.733061 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:23:24.798951 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:23:24.801243 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 13:23:25.819626 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:23:25.836829 >>> {command: get_text, finderType: ByType, type: ArtistsState}
2023-03-06 13:31:54.456903 >>> {command: get_health}
2023-03-06 13:31:54.542738 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:31:54.545581 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 13:31:56.188491 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:31:56.196465 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:31:56.371947 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:31:56.373231 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 13:31:56.813175 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:31:56.813611 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 13:31:56.915065 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:31:56.916642 >>> {command: enter_text, text: Selena}
2023-03-06 13:31:56.934500 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:31:56.934926 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:31:58.029296 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:31:58.030896 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 13:31:59.095665 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:31:59.096216 >>> {command: waitFor, finderType: ByText, text: Selena}
2023-03-06 13:32:00.130046 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:32:00.130878 >>> {command: tap, finderType: ByText, text: Selena}
2023-03-06 13:32:01.241093 <<< {isError: true, response: Uncaught extension error while executing tap: The finder "2 widgets with text "Selena" (considering only hit-testable ones) (ignoring offstage widgets): [Text("Selena", debugLabel: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, inherit: false, color: Color(0xffc4a35a), family: .SF UI Text, size: 22.0, weight: 700, baseline: alphabetic, decoration: TextDecoration.none, textAlign: center, dependencies: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery]), EditableText-[LabeledGlobalKey<EditableTextState>#17420](controller: TextEditingController#f96e0(TextEditingValue(text: ┤Selena├, selection: TextSelection.collapsed(offset: 6, affinity: TextAffinity.downstream, isDirectional: false), composing: TextRange(start: -1, end: -1))), focusNode: FocusNode#b7047([PRIMARY FOCUS]), debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none, textAlign: start, keyboardType: TextInputType(name: TextInputType.text, signed: null, decimal: null), autofillHints: [], spellCheckConfiguration:
    spell check enabled   : false
      spell check service   : null
      misspelled text style : null
  , dependencies: [Directionality, MediaQuery, ScrollConfiguration, _EffectiveTickerMode], state: EditableTextState#58c89(tickers: tracking 1 ticker))]" (used in a call to "tap()") ambiguously found multiple matching widgets. The "tap()" method needs a single target.
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:1227:7)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1163:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:504:18)
#3      CommandHandlerFactory._tap (package:flutter_driver/src/common/handler_factory.dart:238:18)
<asynchronous suspension>
#4      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#5      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:33:23.810467 >>> {command: get_health}
2023-03-06 13:33:23.895151 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:33:23.896248 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 13:33:25.539357 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:33:25.545769 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:33:25.712090 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:33:25.714081 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 13:33:26.103355 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:33:26.104111 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 13:33:26.205017 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:33:26.206599 >>> {command: enter_text, text: Selena}
2023-03-06 13:33:26.223381 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:33:26.223959 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:33:27.323059 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:33:27.324556 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 13:33:28.386554 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:33:28.387494 >>> {command: waitFor, finderType: ByText, text: Selena}
2023-03-06 13:33:29.419277 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:33:29.420374 >>> {command: tap, finderType: ByText, text: Selena}
2023-03-06 13:33:30.514525 <<< {isError: true, response: Uncaught extension error while executing tap: The finder "2 widgets with text "Selena" (considering only hit-testable ones) (ignoring offstage widgets): [Text("Selena", debugLabel: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, inherit: false, color: Color(0xffc4a35a), family: .SF UI Text, size: 22.0, weight: 700, baseline: alphabetic, decoration: TextDecoration.none, textAlign: center, dependencies: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery]), EditableText-[LabeledGlobalKey<EditableTextState>#dc1da](controller: TextEditingController#d8d01(TextEditingValue(text: ┤Selena├, selection: TextSelection.collapsed(offset: 6, affinity: TextAffinity.downstream, isDirectional: false), composing: TextRange(start: -1, end: -1))), focusNode: FocusNode#875e9([PRIMARY FOCUS]), debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none, textAlign: start, keyboardType: TextInputType(name: TextInputType.text, signed: null, decimal: null), autofillHints: [], spellCheckConfiguration:
    spell check enabled   : false
      spell check service   : null
      misspelled text style : null
  , dependencies: [Directionality, MediaQuery, ScrollConfiguration, _EffectiveTickerMode], state: EditableTextState#caf1b(tickers: tracking 1 ticker))]" (used in a call to "tap()") ambiguously found multiple matching widgets. The "tap()" method needs a single target.
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:1227:7)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1163:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:504:18)
#3      CommandHandlerFactory._tap (package:flutter_driver/src/common/handler_factory.dart:238:18)
<asynchronous suspension>
#4      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#5      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:34:08.701830 >>> {command: get_health}
2023-03-06 13:34:08.789801 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:34:08.790918 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 13:34:10.407029 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:34:10.414063 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:34:10.586911 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:34:10.589145 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 13:34:10.961814 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:34:10.962556 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 13:34:11.062665 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:34:11.064459 >>> {command: enter_text, text: Selena}
2023-03-06 13:34:11.082415 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:34:11.082902 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:34:12.169775 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:34:12.171158 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 13:34:13.231279 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:34:13.231958 >>> {command: waitFor, finderType: ByText, text: Selena Gomez}
2023-03-06 13:34:14.267341 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:34:14.268844 >>> {command: tap, finderType: ByText, text: Selena Gomez}
2023-03-06 13:34:15.369611 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:35:39.936141 >>> {command: get_health}
2023-03-06 13:35:40.021173 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:35:40.022279 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 13:35:41.640501 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:35:41.649439 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:35:41.819823 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:35:41.821684 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 13:35:42.211832 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:35:42.212267 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 13:35:42.313444 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:35:42.315202 >>> {command: enter_text, text: Selena}
2023-03-06 13:35:42.332836 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:35:42.333344 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:35:43.437828 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:35:43.438475 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 13:35:44.524194 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:35:44.525078 >>> {command: waitFor, finderType: ByText, text: Selena Gomez}
2023-03-06 13:35:45.562075 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:35:47.567299 >>> {command: tap, finderType: ByText, text: Selena Gomez}
2023-03-06 13:35:47.707800 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:35:52.712643 >>> {command: waitForAbsent, finderType: ByText, text: Selena Gomez}
2023-03-06 13:35:52.750324 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:53:06.479934 >>> {command: get_health}
2023-03-06 13:53:06.564206 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:53:06.565344 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 13:53:07.905733 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:53:07.908145 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:53:08.491766 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:53:08.493797 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 13:53:08.947218 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:53:08.947842 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 13:53:09.047386 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:53:09.049206 >>> {command: enter_text, text: Selena}
2023-03-06 13:53:09.084854 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:53:09.085647 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 13:53:10.198189 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:53:10.199887 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 13:53:11.222912 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:53:11.223603 >>> {command: waitFor, finderType: ByText, text: Selena Gomez}
2023-03-06 13:53:12.244146 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:53:12.244865 >>> {command: tap, finderType: ByText, text: Selena Gomez}
2023-03-06 13:53:13.349911 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:53:13.351460 >>> {command: waitForAbsent, finderType: ByText, text: Selena Gomez}
2023-03-06 13:53:13.991526 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:53:13.992244 >>> {command: waitFor, finderType: ByText, text: For You}
2023-03-06 13:53:13.998594 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 13:53:13.999122 >>> {command: tap, finderType: ByText, text: For You}
2023-03-06 13:53:14.042760 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:03:40.229277 >>> {command: get_health}
2023-03-06 20:03:40.316897 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:03:40.318037 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 20:03:41.685226 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:03:41.688730 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 20:03:42.130794 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:03:42.132825 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 20:03:42.565730 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:03:42.566210 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 20:03:42.676029 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:03:42.678056 >>> {command: enter_text, text: Selena Gomez}
2023-03-06 20:03:42.697719 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:03:42.698130 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 20:03:43.789783 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:03:43.792903 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 20:03:44.897216 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:03:44.898237 >>> {command: waitFor, finderType: ByText, text: Selena Gomez}
2023-03-06 20:03:45.934117 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:03:45.935136 >>> {command: tap, finderType: ByText, text: Selena Gomez}
2023-03-06 20:03:47.049257 <<< {isError: true, response: Uncaught extension error while executing tap: The finder "2 widgets with text "Selena Gomez" (considering only hit-testable ones) (ignoring offstage widgets): [Text("Selena Gomez", debugLabel: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, inherit: false, color: Color(0xffc4a35a), family: .SF UI Text, size: 22.0, weight: 700, baseline: alphabetic, decoration: TextDecoration.none, textAlign: center, dependencies: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery]), EditableText-[LabeledGlobalKey<EditableTextState>#15c06](controller: TextEditingController#07b81(TextEditingValue(text: ┤Selena Gomez├, selection: TextSelection.collapsed(offset: 12, affinity: TextAffinity.downstream, isDirectional: false), composing: TextRange(start: -1, end: -1))), focusNode: FocusNode#e2185([PRIMARY FOCUS]), debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none, textAlign: start, keyboardType: TextInputType(name: TextInputType.text, signed: null, decimal: null), autofillHints: [], spellCheckConfiguration:
    spell check enabled   : false
      spell check service   : null
      misspelled text style : null
  , dependencies: [Directionality, MediaQuery, ScrollConfiguration, _EffectiveTickerMode], state: EditableTextState#c7189(tickers: tracking 1 ticker))]" (used in a call to "tap()") ambiguously found multiple matching widgets. The "tap()" method needs a single target.
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:1227:7)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1163:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:504:18)
#3      CommandHandlerFactory._tap (package:flutter_driver/src/common/handler_factory.dart:238:18)
<asynchronous suspension>
#4      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#5      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:25:25.335191 >>> {command: get_health}
2023-03-06 20:25:25.421884 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:25:25.426858 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 20:25:26.805546 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:25:26.823112 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 20:25:27.190859 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:25:27.192382 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 20:25:27.667629 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:25:27.668118 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 20:25:27.792142 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:25:27.793362 >>> {command: enter_text, text: Selena Gomez}
2023-03-06 20:25:27.894770 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:25:27.895275 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 20:25:28.991944 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:25:28.993122 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 20:25:30.065088 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:25:30.066057 >>> {command: waitFor, finderType: ByText, text: Selena Gomez}
2023-03-06 20:25:31.105284 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:25:31.106136 >>> {command: tap, finderType: ByText, text: Selena Gomez}
2023-03-06 20:25:32.186302 <<< {isError: true, response: Uncaught extension error while executing tap: The finder "2 widgets with text "Selena Gomez" (considering only hit-testable ones) (ignoring offstage widgets): [Text("Selena Gomez", debugLabel: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, inherit: false, color: Color(0xffc4a35a), family: .SF UI Text, size: 22.0, weight: 700, baseline: alphabetic, decoration: TextDecoration.none, textAlign: center, dependencies: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery]), EditableText-[LabeledGlobalKey<EditableTextState>#19a1f](controller: TextEditingController#902c6(TextEditingValue(text: ┤Selena Gomez├, selection: TextSelection.collapsed(offset: 12, affinity: TextAffinity.downstream, isDirectional: false), composing: TextRange(start: -1, end: -1))), focusNode: FocusNode#ca05c([PRIMARY FOCUS]), debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none, textAlign: start, keyboardType: TextInputType(name: TextInputType.text, signed: null, decimal: null), autofillHints: [], spellCheckConfiguration:
    spell check enabled   : false
      spell check service   : null
      misspelled text style : null
  , dependencies: [Directionality, MediaQuery, ScrollConfiguration, _EffectiveTickerMode], state: EditableTextState#e41ab(tickers: tracking 1 ticker))]" (used in a call to "tap()") ambiguously found multiple matching widgets. The "tap()" method needs a single target.
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:1227:7)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1163:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:504:18)
#3      CommandHandlerFactory._tap (package:flutter_driver/src/common/handler_factory.dart:238:18)
<asynchronous suspension>
#4      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#5      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:36:27.626323 >>> {command: get_health}
2023-03-06 20:36:27.710208 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:36:27.711335 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 20:36:29.355847 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:36:29.361969 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 20:36:29.539251 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:36:29.541084 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 20:36:29.958210 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:36:29.959170 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 20:36:30.064012 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:36:30.065570 >>> {command: enter_text, text: Selena Gomez}
2023-03-06 20:36:30.083212 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:36:30.083633 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 20:36:31.174254 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:36:31.175951 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 20:36:32.234400 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:36:32.235660 >>> {command: waitFor, finderType: ByText, text: Selena Gomez}
2023-03-06 20:36:33.270083 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:36:33.271623 >>> {command: waitFor, finderType: ByType, type: FavoriteButton}
2023-03-06 20:48:42.686840 >>> {command: get_health}
2023-03-06 20:48:42.779895 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:48:42.780918 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 20:48:44.338649 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:48:44.345327 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 20:48:44.614575 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:48:44.616124 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 20:48:45.012115 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:48:45.012764 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 20:48:45.113698 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:48:45.115440 >>> {command: enter_text, text: Sun Yan-Zi}
2023-03-06 20:48:45.133631 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:48:45.134172 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 20:48:46.237918 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:48:46.241294 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 20:48:47.377534 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:48:47.378264 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 20:48:48.414200 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 20:48:48.415567 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 20:48:49.510556 <<< {isError: true, response: Uncaught extension error while executing tap: The finder "2 widgets with text "Sun Yan-Zi" (considering only hit-testable ones) (ignoring offstage widgets): [Text("Sun Yan-Zi", debugLabel: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, inherit: false, color: Color(0xffc4a35a), family: .SF UI Text, size: 22.0, weight: 700, baseline: alphabetic, decoration: TextDecoration.none, textAlign: center, dependencies: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery]), EditableText-[LabeledGlobalKey<EditableTextState>#74234](controller: TextEditingController#2c196(TextEditingValue(text: ┤Sun Yan-Zi├, selection: TextSelection.collapsed(offset: 10, affinity: TextAffinity.downstream, isDirectional: false), composing: TextRange(start: -1, end: -1))), focusNode: FocusNode#b5e51([PRIMARY FOCUS]), debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none, textAlign: start, keyboardType: TextInputType(name: TextInputType.text, signed: null, decimal: null), autofillHints: [], spellCheckConfiguration:
    spell check enabled   : false
      spell check service   : null
      misspelled text style : null
  , dependencies: [Directionality, MediaQuery, ScrollConfiguration, _EffectiveTickerMode], state: EditableTextState#ce4e3(tickers: tracking 1 ticker))]" (used in a call to "tap()") ambiguously found multiple matching widgets. The "tap()" method needs a single target.
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:1227:7)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1163:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:504:18)
#3      CommandHandlerFactory._tap (package:flutter_driver/src/common/handler_factory.dart:238:18)
<asynchronous suspension>
#4      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#5      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:05:49.659896 >>> {command: get_health}
2023-03-06 21:05:49.747228 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:05:49.748331 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 21:05:51.363166 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:05:51.370022 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:05:51.552150 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:05:51.553674 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 21:05:51.941129 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:05:51.941577 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 21:05:52.043419 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:05:52.044779 >>> {command: enter_text, text: Sun Yan-Zi}
2023-03-06 21:05:52.063354 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:05:52.064138 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:05:53.163816 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:05:53.165275 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 21:05:54.227405 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:05:54.228354 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:05:55.284844 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:05:55.288803 >>> {command: tap, finderType: ByValueKey, keyValueString: 0.ff0ecbbe-34b0-49c7-a36d-81a47700ac130.false, keyValueType: String}
2023-03-06 21:08:02.088312 >>> {command: get_health}
2023-03-06 21:08:02.175581 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:08:02.178146 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 21:08:03.922036 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:08:03.933270 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:08:04.124749 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:08:04.125886 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 21:08:04.534824 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:08:04.535756 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 21:08:04.640654 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:08:04.642149 >>> {command: enter_text, text: Sun Yan-Zi}
2023-03-06 21:08:04.730774 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:08:04.731257 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:08:05.828336 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:08:05.829876 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 21:08:06.928248 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:08:06.929501 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:08:07.958979 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:08:07.959674 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:08:09.054715 <<< {isError: true, response: Uncaught extension error while executing tap: The finder "2 widgets with text "Sun Yan-Zi" (considering only hit-testable ones) (ignoring offstage widgets): [Text("Sun Yan-Zi", debugLabel: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, inherit: false, color: Color(0xffc4a35a), family: .SF UI Text, size: 22.0, weight: 700, baseline: alphabetic, decoration: TextDecoration.none, textAlign: center, dependencies: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery]), EditableText-[LabeledGlobalKey<EditableTextState>#f9608](controller: TextEditingController#675df(TextEditingValue(text: ┤Sun Yan-Zi├, selection: TextSelection.collapsed(offset: 10, affinity: TextAffinity.downstream, isDirectional: false), composing: TextRange(start: -1, end: -1))), focusNode: FocusNode#41455([PRIMARY FOCUS]), debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none, textAlign: start, keyboardType: TextInputType(name: TextInputType.text, signed: null, decimal: null), autofillHints: [], spellCheckConfiguration:
    spell check enabled   : false
      spell check service   : null
      misspelled text style : null
  , dependencies: [Directionality, MediaQuery, ScrollConfiguration, _EffectiveTickerMode], state: EditableTextState#7c326(tickers: tracking 1 ticker))]" (used in a call to "tap()") ambiguously found multiple matching widgets. The "tap()" method needs a single target.
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:1227:7)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1163:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:504:18)
#3      CommandHandlerFactory._tap (package:flutter_driver/src/common/handler_factory.dart:238:18)
<asynchronous suspension>
#4      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#5      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:11:06.500226 >>> {command: get_health}
2023-03-06 21:11:06.595384 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:11:06.597387 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 21:11:08.231181 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:11:08.236531 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:11:08.413899 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:11:08.415232 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 21:11:08.807221 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:11:08.808011 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 21:11:08.910202 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:11:08.915062 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 21:11:08.934201 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:11:08.934634 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:11:10.030468 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:11:10.031474 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 21:11:11.067325 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:11:11.067987 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:11:12.095924 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:11:12.096943 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:11:13.186451 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:11:13.188132 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 21:11:14.002884 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:11:14.004280 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 21:11:14.028751 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:11:14.034327 >>> {command: waitFor, finderType: ByType, type: FavoriteButton}
2023-03-06 21:11:14.054693 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:11:14.055196 >>> {command: tap, finderType: ByType, type: FavoriteButton}
2023-03-06 21:11:14.094198 <<< {isError: true, response: Uncaught extension error while executing tap: The finder "8 widgets with widget with runtimeType "FavoriteButton" (considering only hit-testable ones) (ignoring offstage widgets): FavoriteButton(state: _FavoriteButtonState#81e09(tickers: tracking 1 ticker)), FavoriteButton(state: _FavoriteButtonState#b18bc(tickers: tracking 1 ticker)), FavoriteButton(state: _FavoriteButtonState#824c3(tickers: tracking 1 ticker)), ..." (used in a call to "tap()") ambiguously found multiple matching widgets. The "tap()" method needs a single target.
#0      WidgetController._getElementPoint (package:flutter_test/src/controller.dart:1227:7)
#1      WidgetController.getCenter (package:flutter_test/src/controller.dart:1163:12)
#2      WidgetController.tap (package:flutter_test/src/controller.dart:504:18)
#3      CommandHandlerFactory._tap (package:flutter_driver/src/common/handler_factory.dart:238:18)
<asynchronous suspension>
#4      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#5      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:15:14.033751 >>> {command: get_health}
2023-03-06 21:15:14.139202 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:15:14.142960 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 21:15:16.139371 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:15:16.147079 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:15:16.326831 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:15:16.327947 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 21:15:16.729062 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:15:16.729498 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 21:15:16.834018 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:15:16.835263 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 21:15:16.853147 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:15:16.853637 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:15:17.910935 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:15:17.912464 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 21:15:19.074973 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:15:19.075802 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:15:20.125637 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:15:20.126443 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:15:21.234821 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:15:21.236444 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 21:15:22.073962 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:15:22.075762 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 21:15:22.096380 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:15:22.102274 >>> {command: waitFor, finderType: ByType, type: FavoriteButton}
2023-03-06 21:15:22.109217 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:15:22.110756 >>> {command: get_diagnostics_tree, finderType: ByType, type: FavoriteButton, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 21:15:22.145414 <<< {isError: true, response: Uncaught extension error while executing get_diagnostics_tree: Bad state: Too many elements
#0      Iterable.single (dart:core/iterable.dart:656:24)
#1      CommandHandlerFactory._getDiagnosticsTree (package:flutter_driver/src/common/handler_factory.dart:362:47)
<asynchronous suspension>
#2      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#3      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:28:26.971714 >>> {command: get_health}
2023-03-06 21:28:27.062064 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:28:27.063231 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 21:28:28.358630 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:28:28.366005 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:28:28.748792 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:28:28.750457 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 21:28:29.197540 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:28:29.198025 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 21:28:29.309322 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:28:29.310768 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 21:28:29.328065 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:28:29.328645 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:28:30.426645 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:28:30.427904 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 21:28:31.559580 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:28:31.560121 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:28:32.611360 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:28:32.612639 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:28:33.711457 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:28:33.712841 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 21:28:34.587893 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:28:34.588755 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 21:28:34.610345 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:28:34.614033 >>> {command: waitFor, finderType: ByType, type: FavoriteButton}
2023-03-06 21:28:34.622896 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:28:34.624515 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByText","text":"The moment"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 21:28:34.666145 <<< {isError: true, response: Uncaught extension error while executing tap: Bad state: No element
#0      Iterable.first (dart:core/iterable.dart:624:7)
#1      _FirstFinder.filter (package:flutter_test/src/finders.dart:598:28)
#2      _SyncStarIterator.moveNext (dart:async-patch/async_patch.dart:528:14)
#3      _HitTestableFinder.filter (package:flutter_test/src/finders.dart:638:37)
#4      _SyncStarIterator.moveNext (dart:async-patch/async_patch.dart:528:14)
#5      Iterable.isEmpty (dart:core/iterable.dart:513:33)
#6      Iterable.isNotEmpty (dart:core/iterable.dart:525:27)
#7      CommandHandlerFactory.waitForElement.<anonymous closure> (package:flutter_driver/src/common/handler_factory.dart:485:51)
#8      CommandHandlerFactory._waitUntilFrame (package:flutter_driver/src/common/handler_factory.dart:512:19)
#9      CommandHandlerFactory.waitForElement (package:flutter_driver/src/common/handler_factory.dart:485:11)
<asynchronous suspension>
#10     CommandHandlerFactory._tap (package:flutter_driver/src/common/handler_factory.dart:235:35)
<asynchronous suspension>
#11     FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#12     BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:31:00.653001 >>> {command: get_health}
2023-03-06 21:31:00.735530 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:31:00.736617 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 21:31:02.353944 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:31:02.364792 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:31:02.529099 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:31:02.530554 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 21:31:02.937026 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:31:02.937459 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 21:31:03.039905 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:31:03.041654 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 21:31:03.060040 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:31:03.060784 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:31:04.158385 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:31:04.160188 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 21:31:05.267582 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:31:05.268514 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:31:06.330128 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:31:06.331032 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:31:07.452120 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:31:07.453796 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 21:31:08.316625 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:31:08.318093 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 21:31:08.342857 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:31:08.349900 >>> {command: waitFor, finderType: ByType, type: FavoriteButton}
2023-03-06 21:31:08.370718 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:31:08.372912 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 21:31:08.445226 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:32:36.786098 >>> {command: get_health}
2023-03-06 21:32:36.869531 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:32:36.870683 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 21:32:38.500827 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:32:38.509050 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:32:38.682053 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:32:38.683323 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 21:32:39.097884 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:32:39.098926 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 21:32:39.202996 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:32:39.204543 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 21:32:39.222033 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:32:39.222470 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:32:40.316675 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:32:40.318007 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 21:32:41.478006 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:32:41.479565 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:32:42.521454 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:32:42.522559 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:32:43.629268 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:32:43.631294 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 21:32:44.500243 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:32:44.501902 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 21:32:44.524313 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:32:44.530517 >>> {command: waitFor, finderType: ByType, type: FavoriteButton}
2023-03-06 21:32:44.534896 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:32:44.535635 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 21:32:44.624399 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:41.836284 >>> {command: get_health}
2023-03-06 21:50:41.921052 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:41.922132 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 21:50:43.268891 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:43.271418 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:50:43.943887 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:43.945757 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 21:50:44.400028 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:44.400484 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 21:50:44.500220 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:44.501947 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 21:50:44.536955 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:44.537704 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:50:45.643362 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:45.644812 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 21:50:46.677755 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:46.678688 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:50:47.703324 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:47.704254 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:50:48.807365 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:48.809125 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 21:50:49.715512 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:49.716412 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 21:50:49.729116 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:49.735882 >>> {command: waitFor, finderType: ByType, type: FavoriteButton}
2023-03-06 21:50:49.744137 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:49.745213 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 21:50:49.863971 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:51.869288 >>> {command: tap, finderType: PageBack}
2023-03-06 21:50:51.983120 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:51.983834 >>> {command: waitForAbsent, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 21:50:53.134869 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:53.135709 >>> {command: tap, finderType: PageBack}
2023-03-06 21:50:54.170832 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:54.171255 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 21:50:54.569047 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:50:54.571802 >>> {command: get_diagnostics_tree, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 21:50:54.595931 <<< {isError: false, response: {description: FavoriteButton, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 189, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 189}, {description: FavoriteButton, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: _FavoriteButtonState#abb3b(tickers: tracking 1 ticker), type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: FavoriteButton, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:48.491084 >>> {command: get_health}
2023-03-06 21:51:48.575533 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:48.576713 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 21:51:50.180608 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:50.187421 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:51:50.350454 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:50.352268 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 21:51:50.727332 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:50.727771 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 21:51:50.827200 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:50.828723 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 21:51:50.846062 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:50.846642 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 21:51:51.943684 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:51.944916 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 21:51:53.057595 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:53.058758 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:51:54.095080 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:54.096329 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 21:51:55.208437 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:55.210312 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 21:51:56.058452 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:56.060029 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 21:51:56.081717 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:56.086486 >>> {command: waitFor, finderType: ByType, type: FavoriteButton}
2023-03-06 21:51:56.093500 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:56.094014 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 21:51:56.172891 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:58.178372 >>> {command: tap, finderType: PageBack}
2023-03-06 21:51:58.538450 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:58.539033 >>> {command: waitForAbsent, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 21:51:59.650474 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:51:59.651024 >>> {command: tap, finderType: PageBack}
2023-03-06 21:52:00.719892 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:52:00.720429 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 21:52:01.107538 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 21:52:01.110880 >>> {command: get_diagnostics_tree, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 21:52:01.134206 <<< {isError: false, response: {description: FavoriteButton, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 189, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 189}, {description: FavoriteButton, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: _FavoriteButtonState#2f2e7(tickers: tracking 1 ticker), type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: FavoriteButton, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:23:12.680637 >>> {command: get_health}
2023-03-06 22:23:12.763327 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:23:12.764562 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 22:23:14.065454 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:23:14.073315 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:23:14.620488 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:23:14.625635 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:23:44.122087 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:23:44.294572 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:23:44.296335 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 22:23:44.758020 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:23:44.758784 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 22:23:44.763251 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:23:44.765251 >>> {command: get_diagnostics_tree, finderType: ByType, type: TextField, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:23:44.831850 <<< {isError: false, response: {description: TextField, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 174, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 174}, {description: TextField, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: TextEditingController#6a178(TextEditingValue(text: ┤├, selection: TextSelection.invalid, composing: TextRange(start: -1, end: -1))), type: DiagnosticsProperty<TextEditingController>, name: controller, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextEditingController, defaultLevel: info}, {description: null, type: DiagnosticsProperty<FocusNode>, name: focusNode, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FocusNode, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<bool>, name: enabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null}, {description: InputDecoration(hintText: "Search for albums", focusedBorder: UnderlineInputBorder(), enabledBorder: UnderlineInputBorder()), type: DiagnosticsProperty<InputDecoration>, name: decoration, style: singleLine, allowNameWrap: true, properties: [], defaultValue: InputDecoration(), missingIfNull: false, propertyType: InputDecoration, defaultLevel: info}, {description: TextInputType(name: TextInputType.text, signed: null, decimal: null), type: DiagnosticsProperty<TextInputType>, name: keyboardType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextInputType(name: TextInputType.text, signed: null, decimal: null), missingIfNull: false, propertyType: TextInputType, defaultLevel: info}, {description: TextStyle(debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none), type: DiagnosticsProperty<TextStyle>, name: style, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextStyle, defaultLevel: info, isDiagnosticableValue: true}, {description: false, type: DiagnosticsProperty<bool>, name: autofocus, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: •, type: DiagnosticsProperty<String>, name: obscuringCharacter, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: •, missingIfNull: false, propertyType: String, defaultLevel: info, value: •}, {description: false, type: DiagnosticsProperty<bool>, name: obscureText, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: true, type: DiagnosticsProperty<bool>, name: autocorrect, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: enabled, type: EnumProperty<SmartDashesType>, name: smartDashesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartDashesType.enabled, missingIfNull: false, propertyType: SmartDashesType, defaultLevel: info}, {description: enabled, type: EnumProperty<SmartQuotesType>, name: smartQuotesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartQuotesType.enabled, missingIfNull: false, propertyType: SmartQuotesType, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: enableSuggestions, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: 1, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 1, missingIfNull: false, propertyType: int, defaultLevel: info, value: 1, numberToString: 1}, {description: null, type: IntProperty, name: minLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: false, type: DiagnosticsProperty<bool>, name: expands, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: null, type: IntProperty, name: maxLength, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<MaxLengthEnforcement>, name: maxLengthEnforcement, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: MaxLengthEnforcement, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextInputAction>, name: textInputAction, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextInputAction, defaultLevel: info, value: null}, {description: none, type: EnumProperty<TextCapitalization>, name: textCapitalization, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextCapitalization.none, missingIfNull: false, propertyType: TextCapitalization, defaultLevel: info}, {description: start, type: EnumProperty<TextAlign>, name: textAlign, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextAlign.start, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: DiagnosticsProperty<TextAlignVertical>, name: textAlignVertical, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlignVertical, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: 2.0, type: DoubleProperty, name: cursorWidth, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 2.0, missingIfNull: false, propertyType: double, defaultLevel: info, value: 2.0, numberToString: 2.0}, {description: null, type: DoubleProperty, name: cursorHeight, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DiagnosticsProperty<Radius>, name: cursorRadius, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Radius, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: cursorColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Brightness>, name: keyboardAppearance, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Brightness, defaultLevel: info, value: null}, {description: EdgeInsets.all(20.0), type: DiagnosticsProperty<EdgeInsetsGeometry>, name: scrollPadding, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: EdgeInsets.all(20.0), missingIfNull: false, propertyType: EdgeInsetsGeometry, defaultLevel: info}, {description: true, type: FlagProperty, name: selectionEnabled, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true, ifFalse: selection disabled}, {description: null, type: DiagnosticsProperty<TextSelectionControls>, name: selectionControls, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextSelectionControls, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollController>, name: scrollController, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollController, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollPhysics>, name: scrollPhysics, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollPhysics, defaultLevel: info, value: null}, {description: Clip.hardEdge, type: DiagnosticsProperty<Clip>, name: clipBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: Clip.hardEdge, missingIfNull: false, propertyType: Clip, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: scribbleEnabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: true, type: DiagnosticsProperty<bool>, name: enableIMEPersonalizedLearning, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: null, type: DiagnosticsProperty<SpellCheckConfiguration>, name: spellCheckConfiguration, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: SpellCheckConfiguration, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, MediaQuery, UnmanagedRestorationScope, _InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#12339]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TextFieldState#2d479, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TextField, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:23:44.834797 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:23:44.983580 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:23:44.985336 >>> {command: enter_text, text: }
2023-03-06 22:23:44.997009 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:23:44.997439 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:23:46.098552 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:23:46.101003 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:23:47.158176 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:23:47.159354 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:24:14.845547 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:24:15.817815 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:15.818703 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 22:24:15.843136 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:15.843577 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:24:16.906751 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:16.907641 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:24:17.938719 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:17.939457 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:24:18.954242 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:18.956042 >>> {command: get_diagnostics_tree, finderType: ByText, text: Sun Yan-Zi, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:24:20.029752 <<< {isError: false, response: {description: Text, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 192, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 192}, {description: Text, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: "Sun Yan-Zi", type: StringProperty, name: data, showName: false, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: String, defaultLevel: info, value: Sun Yan-Zi, quoted: true}, {description: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, type: MessageProperty, name: debugLabel, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: false, type: DiagnosticsProperty<bool>, name: inherit, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: Color(0xffc4a35a), type: ColorProperty, name: color, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, valueProperties: {red: 196, green: 163, blue: 90, alpha: 255}}, {description: null, type: ColorProperty, name: backgroundColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: .SF UI Text, type: StringProperty, name: family, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: String, defaultLevel: info, value: .SF UI Text, quoted: false}, {description: null, type: IterableProperty<String>, name: familyFallback, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, ifEmpty: [], missingIfNull: false, propertyType: Iterable<String>, defaultLevel: info, value: null}, {description: 22.0, type: DoubleProperty, name: size, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: 22.0, numberToString: 22.0}, {description: 700, type: DiagnosticsProperty<FontWeight>, name: weight, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontWeight, defaultLevel: info}, {description: null, type: EnumProperty<FontStyle>, name: style, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontStyle, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: letterSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DoubleProperty, name: wordSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: alphabetic, type: EnumProperty<TextBaseline>, name: baseline, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextBaseline, defaultLevel: info}, {description: null, type: DoubleProperty, name: height, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: null, type: EnumProperty<TextLeadingDistribution>, name: leadingDistribution, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextLeadingDistribution, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: foreground, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: background, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: decorationColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: fine, value: null}, {description: TextDecoration.none, type: DiagnosticsProperty<TextDecoration>, name: decoration, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDecoration, defaultLevel: hidden}, {description: TextDecoration.none, type: MessageProperty, name: decoration, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: decorationThickness, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: center, type: EnumProperty<TextAlign>, name: textAlign, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: FlagProperty, name: softWrap, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null, ifTrue: wrapping at box width, ifFalse: no wrapping except at line break characters}, {description: null, type: EnumProperty<TextOverflow>, name: overflow, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextOverflow, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: textScaleFactor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<TextWidthBasis>, name: textWidthBasis, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextWidthBasis, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<TextHeightBehavior>, name: textHeightBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextHeightBehavior, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: Text, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:20.034096 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:24:21.132148 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:21.133227 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:24:21.851555 <<< {isError: true, response: Uncaught extension error while executing get_diagnostics_tree: Bad state: Too many elements
#0      Iterable.single (dart:core/iterable.dart:656:24)
#1      CommandHandlerFactory._getDiagnosticsTree (package:flutter_driver/src/common/handler_factory.dart:362:47)
<asynchronous suspension>
#2      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#3      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:21.861772 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:21.862234 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:24:21.868596 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:21.869220 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:24:21.874275 <<< {isError: true, response: Uncaught extension error while executing get_diagnostics_tree: Bad state: Too many elements
#0      Iterable.single (dart:core/iterable.dart:656:24)
#1      CommandHandlerFactory._getDiagnosticsTree (package:flutter_driver/src/common/handler_factory.dart:362:47)
<asynchronous suspension>
#2      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#3      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:21.876884 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:24:21.902295 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:21.902987 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:24:23.074605 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:23.076289 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:24:23.596547 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:23.597280 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:24:23.650827 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:23.651544 >>> {command: get_diagnostics_tree, finderType: ByType, type: TitleDescriptionWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:24:24.058032 <<< {isError: true, response: Uncaught extension error while executing get_diagnostics_tree: Bad state: Too many elements
#0      Iterable.single (dart:core/iterable.dart:656:24)
#1      CommandHandlerFactory._getDiagnosticsTree (package:flutter_driver/src/common/handler_factory.dart:362:47)
<asynchronous suspension>
#2      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#3      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:24.060524 >>> {command: tap, finderType: PageBack}
2023-03-06 22:24:24.126634 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:24.127121 >>> {command: waitForAbsent, finderType: ByText, text: Music App}
2023-03-06 22:24:24.663540 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:24.665151 >>> {command: tap, finderType: PageBack}
2023-03-06 22:24:24.706160 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:24.706806 >>> {command: waitForAbsent, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:24:25.806383 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:25.807099 >>> {command: tap, finderType: PageBack}
2023-03-06 22:24:26.882624 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:26.883357 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:24:27.269025 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:27.270259 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:24:27.285627 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:27.286237 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:24:27.294700 <<< {isError: false, response: {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 168, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 168}, {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: [<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#12339]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: AlbumsWidget, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:27.297343 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:24:27.304967 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:27.305775 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:24:27.343706 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:24:27.344490 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:24:27.848108 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:27:54.305291 >>> {command: get_health}
2023-03-06 22:27:54.399034 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:27:54.400551 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 22:27:56.041345 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:27:56.048990 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:27:56.130763 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:27:56.136700 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:27:56.141242 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:27:56.141542 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:27:56.144039 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:27:56.144757 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:27:56.255627 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:27:56.256872 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 22:27:56.666618 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:27:56.667047 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 22:27:56.671157 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:27:56.673179 >>> {command: get_diagnostics_tree, finderType: ByType, type: TextField, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:27:56.741491 <<< {isError: false, response: {description: TextField, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 174, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 174}, {description: TextField, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: TextEditingController#43694(TextEditingValue(text: ┤├, selection: TextSelection.invalid, composing: TextRange(start: -1, end: -1))), type: DiagnosticsProperty<TextEditingController>, name: controller, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextEditingController, defaultLevel: info}, {description: null, type: DiagnosticsProperty<FocusNode>, name: focusNode, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FocusNode, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<bool>, name: enabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null}, {description: InputDecoration(hintText: "Search for albums", focusedBorder: UnderlineInputBorder(), enabledBorder: UnderlineInputBorder()), type: DiagnosticsProperty<InputDecoration>, name: decoration, style: singleLine, allowNameWrap: true, properties: [], defaultValue: InputDecoration(), missingIfNull: false, propertyType: InputDecoration, defaultLevel: info}, {description: TextInputType(name: TextInputType.text, signed: null, decimal: null), type: DiagnosticsProperty<TextInputType>, name: keyboardType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextInputType(name: TextInputType.text, signed: null, decimal: null), missingIfNull: false, propertyType: TextInputType, defaultLevel: info}, {description: TextStyle(debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none), type: DiagnosticsProperty<TextStyle>, name: style, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextStyle, defaultLevel: info, isDiagnosticableValue: true}, {description: false, type: DiagnosticsProperty<bool>, name: autofocus, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: •, type: DiagnosticsProperty<String>, name: obscuringCharacter, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: •, missingIfNull: false, propertyType: String, defaultLevel: info, value: •}, {description: false, type: DiagnosticsProperty<bool>, name: obscureText, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: true, type: DiagnosticsProperty<bool>, name: autocorrect, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: enabled, type: EnumProperty<SmartDashesType>, name: smartDashesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartDashesType.enabled, missingIfNull: false, propertyType: SmartDashesType, defaultLevel: info}, {description: enabled, type: EnumProperty<SmartQuotesType>, name: smartQuotesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartQuotesType.enabled, missingIfNull: false, propertyType: SmartQuotesType, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: enableSuggestions, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: 1, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 1, missingIfNull: false, propertyType: int, defaultLevel: info, value: 1, numberToString: 1}, {description: null, type: IntProperty, name: minLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: false, type: DiagnosticsProperty<bool>, name: expands, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: null, type: IntProperty, name: maxLength, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<MaxLengthEnforcement>, name: maxLengthEnforcement, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: MaxLengthEnforcement, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextInputAction>, name: textInputAction, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextInputAction, defaultLevel: info, value: null}, {description: none, type: EnumProperty<TextCapitalization>, name: textCapitalization, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextCapitalization.none, missingIfNull: false, propertyType: TextCapitalization, defaultLevel: info}, {description: start, type: EnumProperty<TextAlign>, name: textAlign, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextAlign.start, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: DiagnosticsProperty<TextAlignVertical>, name: textAlignVertical, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlignVertical, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: 2.0, type: DoubleProperty, name: cursorWidth, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 2.0, missingIfNull: false, propertyType: double, defaultLevel: info, value: 2.0, numberToString: 2.0}, {description: null, type: DoubleProperty, name: cursorHeight, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DiagnosticsProperty<Radius>, name: cursorRadius, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Radius, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: cursorColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Brightness>, name: keyboardAppearance, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Brightness, defaultLevel: info, value: null}, {description: EdgeInsets.all(20.0), type: DiagnosticsProperty<EdgeInsetsGeometry>, name: scrollPadding, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: EdgeInsets.all(20.0), missingIfNull: false, propertyType: EdgeInsetsGeometry, defaultLevel: info}, {description: true, type: FlagProperty, name: selectionEnabled, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true, ifFalse: selection disabled}, {description: null, type: DiagnosticsProperty<TextSelectionControls>, name: selectionControls, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextSelectionControls, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollController>, name: scrollController, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollController, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollPhysics>, name: scrollPhysics, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollPhysics, defaultLevel: info, value: null}, {description: Clip.hardEdge, type: DiagnosticsProperty<Clip>, name: clipBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: Clip.hardEdge, missingIfNull: false, propertyType: Clip, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: scribbleEnabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: true, type: DiagnosticsProperty<bool>, name: enableIMEPersonalizedLearning, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: null, type: DiagnosticsProperty<SpellCheckConfiguration>, name: spellCheckConfiguration, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: SpellCheckConfiguration, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, MediaQuery, UnmanagedRestorationScope, _InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#ed044]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TextFieldState#631b2, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TextField, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:27:56.743691 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:27:56.893613 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:27:56.894945 >>> {command: enter_text, text: }
2023-03-06 22:27:57.045660 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:27:57.046360 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:27:57.989145 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:27:57.990550 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:27:59.057811 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:27:59.059272 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:30:45.316344 >>> {command: get_health}
2023-03-06 22:30:45.410245 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:30:45.412713 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 22:30:47.052785 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:30:47.063081 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:30:47.143030 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:30:47.150458 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:30:47.157811 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:30:47.158470 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:30:47.162967 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:30:47.165387 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:30:47.277284 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:30:47.278126 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 22:30:47.717188 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:30:47.717698 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 22:30:47.722816 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:30:47.724715 >>> {command: get_diagnostics_tree, finderType: ByType, type: TextField, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:30:47.803967 <<< {isError: false, response: {description: TextField, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 174, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 174}, {description: TextField, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: TextEditingController#a2f31(TextEditingValue(text: ┤├, selection: TextSelection.invalid, composing: TextRange(start: -1, end: -1))), type: DiagnosticsProperty<TextEditingController>, name: controller, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextEditingController, defaultLevel: info}, {description: null, type: DiagnosticsProperty<FocusNode>, name: focusNode, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FocusNode, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<bool>, name: enabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null}, {description: InputDecoration(hintText: "Search for albums", focusedBorder: UnderlineInputBorder(), enabledBorder: UnderlineInputBorder()), type: DiagnosticsProperty<InputDecoration>, name: decoration, style: singleLine, allowNameWrap: true, properties: [], defaultValue: InputDecoration(), missingIfNull: false, propertyType: InputDecoration, defaultLevel: info}, {description: TextInputType(name: TextInputType.text, signed: null, decimal: null), type: DiagnosticsProperty<TextInputType>, name: keyboardType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextInputType(name: TextInputType.text, signed: null, decimal: null), missingIfNull: false, propertyType: TextInputType, defaultLevel: info}, {description: TextStyle(debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none), type: DiagnosticsProperty<TextStyle>, name: style, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextStyle, defaultLevel: info, isDiagnosticableValue: true}, {description: false, type: DiagnosticsProperty<bool>, name: autofocus, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: •, type: DiagnosticsProperty<String>, name: obscuringCharacter, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: •, missingIfNull: false, propertyType: String, defaultLevel: info, value: •}, {description: false, type: DiagnosticsProperty<bool>, name: obscureText, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: true, type: DiagnosticsProperty<bool>, name: autocorrect, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: enabled, type: EnumProperty<SmartDashesType>, name: smartDashesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartDashesType.enabled, missingIfNull: false, propertyType: SmartDashesType, defaultLevel: info}, {description: enabled, type: EnumProperty<SmartQuotesType>, name: smartQuotesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartQuotesType.enabled, missingIfNull: false, propertyType: SmartQuotesType, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: enableSuggestions, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: 1, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 1, missingIfNull: false, propertyType: int, defaultLevel: info, value: 1, numberToString: 1}, {description: null, type: IntProperty, name: minLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: false, type: DiagnosticsProperty<bool>, name: expands, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: null, type: IntProperty, name: maxLength, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<MaxLengthEnforcement>, name: maxLengthEnforcement, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: MaxLengthEnforcement, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextInputAction>, name: textInputAction, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextInputAction, defaultLevel: info, value: null}, {description: none, type: EnumProperty<TextCapitalization>, name: textCapitalization, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextCapitalization.none, missingIfNull: false, propertyType: TextCapitalization, defaultLevel: info}, {description: start, type: EnumProperty<TextAlign>, name: textAlign, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextAlign.start, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: DiagnosticsProperty<TextAlignVertical>, name: textAlignVertical, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlignVertical, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: 2.0, type: DoubleProperty, name: cursorWidth, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 2.0, missingIfNull: false, propertyType: double, defaultLevel: info, value: 2.0, numberToString: 2.0}, {description: null, type: DoubleProperty, name: cursorHeight, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DiagnosticsProperty<Radius>, name: cursorRadius, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Radius, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: cursorColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Brightness>, name: keyboardAppearance, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Brightness, defaultLevel: info, value: null}, {description: EdgeInsets.all(20.0), type: DiagnosticsProperty<EdgeInsetsGeometry>, name: scrollPadding, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: EdgeInsets.all(20.0), missingIfNull: false, propertyType: EdgeInsetsGeometry, defaultLevel: info}, {description: true, type: FlagProperty, name: selectionEnabled, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true, ifFalse: selection disabled}, {description: null, type: DiagnosticsProperty<TextSelectionControls>, name: selectionControls, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextSelectionControls, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollController>, name: scrollController, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollController, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollPhysics>, name: scrollPhysics, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollPhysics, defaultLevel: info, value: null}, {description: Clip.hardEdge, type: DiagnosticsProperty<Clip>, name: clipBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: Clip.hardEdge, missingIfNull: false, propertyType: Clip, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: scribbleEnabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: true, type: DiagnosticsProperty<bool>, name: enableIMEPersonalizedLearning, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: null, type: DiagnosticsProperty<SpellCheckConfiguration>, name: spellCheckConfiguration, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: SpellCheckConfiguration, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, MediaQuery, UnmanagedRestorationScope, _InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#87702]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TextFieldState#79542, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TextField, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:30:47.809212 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:30:47.968846 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:30:47.970051 >>> {command: enter_text, text: }
2023-03-06 22:30:47.981480 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:30:47.982147 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:30:49.063226 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:30:49.064774 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:30:50.090872 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:30:50.092157 >>> {command: waitFor, finderType: ByType, type: AlbumsWidget}
2023-03-06 22:31:17.851405 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:31:18.718086 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:18.719115 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 22:31:18.738398 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:18.738876 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:31:19.821909 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:19.822610 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:31:20.903179 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:20.904038 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:31:21.919674 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:21.920403 >>> {command: get_diagnostics_tree, finderType: ByText, text: Sun Yan-Zi, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:31:22.965648 <<< {isError: false, response: {description: Text, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 192, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 192}, {description: Text, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: "Sun Yan-Zi", type: StringProperty, name: data, showName: false, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: String, defaultLevel: info, value: Sun Yan-Zi, quoted: true}, {description: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, type: MessageProperty, name: debugLabel, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: false, type: DiagnosticsProperty<bool>, name: inherit, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: Color(0xffc4a35a), type: ColorProperty, name: color, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, valueProperties: {red: 196, green: 163, blue: 90, alpha: 255}}, {description: null, type: ColorProperty, name: backgroundColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: .SF UI Text, type: StringProperty, name: family, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: String, defaultLevel: info, value: .SF UI Text, quoted: false}, {description: null, type: IterableProperty<String>, name: familyFallback, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, ifEmpty: [], missingIfNull: false, propertyType: Iterable<String>, defaultLevel: info, value: null}, {description: 22.0, type: DoubleProperty, name: size, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: 22.0, numberToString: 22.0}, {description: 700, type: DiagnosticsProperty<FontWeight>, name: weight, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontWeight, defaultLevel: info}, {description: null, type: EnumProperty<FontStyle>, name: style, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontStyle, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: letterSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DoubleProperty, name: wordSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: alphabetic, type: EnumProperty<TextBaseline>, name: baseline, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextBaseline, defaultLevel: info}, {description: null, type: DoubleProperty, name: height, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: null, type: EnumProperty<TextLeadingDistribution>, name: leadingDistribution, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextLeadingDistribution, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: foreground, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: background, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: decorationColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: fine, value: null}, {description: TextDecoration.none, type: DiagnosticsProperty<TextDecoration>, name: decoration, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDecoration, defaultLevel: hidden}, {description: TextDecoration.none, type: MessageProperty, name: decoration, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: decorationThickness, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: center, type: EnumProperty<TextAlign>, name: textAlign, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: FlagProperty, name: softWrap, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null, ifTrue: wrapping at box width, ifFalse: no wrapping except at line break characters}, {description: null, type: EnumProperty<TextOverflow>, name: overflow, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextOverflow, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: textScaleFactor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<TextWidthBasis>, name: textWidthBasis, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextWidthBasis, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<TextHeightBehavior>, name: textHeightBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextHeightBehavior, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: Text, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:22.968500 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:31:24.062077 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:24.063236 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:31:25.029964 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:25.031551 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:31:25.033241 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:25.033712 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:31:25.059161 <<< {isError: true, response: Uncaught extension error while executing get_diagnostics_tree: Bad state: Too many elements
#0      Iterable.single (dart:core/iterable.dart:656:24)
#1      CommandHandlerFactory._getDiagnosticsTree (package:flutter_driver/src/common/handler_factory.dart:362:47)
<asynchronous suspension>
#2      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#3      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:25.068927 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:25.069429 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:31:25.091002 <<< {isError: true, response: Uncaught extension error while executing get_diagnostics_tree: Bad state: Too many elements
#0      Iterable.single (dart:core/iterable.dart:656:24)
#1      CommandHandlerFactory._getDiagnosticsTree (package:flutter_driver/src/common/handler_factory.dart:362:47)
<asynchronous suspension>
#2      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#3      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:25.094383 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:31:25.109371 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:25.109837 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:31:25.172749 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:25.174915 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:31:25.630320 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:25.631268 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:31:25.687263 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:25.687679 >>> {command: get_diagnostics_tree, finderType: ByType, type: TitleDescriptionWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:31:26.092935 <<< {isError: true, response: Uncaught extension error while executing get_diagnostics_tree: Bad state: Too many elements
#0      Iterable.single (dart:core/iterable.dart:656:24)
#1      CommandHandlerFactory._getDiagnosticsTree (package:flutter_driver/src/common/handler_factory.dart:362:47)
<asynchronous suspension>
#2      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#3      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:26.096556 >>> {command: tap, finderType: PageBack}
2023-03-06 22:31:26.153631 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:26.154143 >>> {command: waitForAbsent, finderType: ByText, text: Music App}
2023-03-06 22:31:26.561415 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:26.562085 >>> {command: tap, finderType: PageBack}
2023-03-06 22:31:26.600409 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:26.600856 >>> {command: waitForAbsent, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:31:27.723873 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:27.724588 >>> {command: tap, finderType: PageBack}
2023-03-06 22:31:28.795412 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:28.796505 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:31:29.253742 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:29.254632 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:31:29.262636 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:29.263364 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:31:29.271968 <<< {isError: false, response: {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 168, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 168}, {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: [<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#87702]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: AlbumsWidget, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:29.274127 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:31:29.280970 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:29.281659 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:31:29.317828 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:31:29.318410 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:32:07.416370 >>> {command: get_health}
2023-03-06 22:32:07.504101 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:07.505573 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 22:32:09.164329 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:09.176947 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:32:09.269192 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:09.274264 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:32:09.279316 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:09.279718 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:32:09.282684 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:09.284716 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:32:09.390691 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:09.392410 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 22:32:09.816296 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:09.816748 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 22:32:09.821224 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:09.823531 >>> {command: get_diagnostics_tree, finderType: ByType, type: TextField, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:32:09.897239 <<< {isError: false, response: {description: TextField, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 174, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 174}, {description: TextField, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: TextEditingController#aa47a(TextEditingValue(text: ┤├, selection: TextSelection.invalid, composing: TextRange(start: -1, end: -1))), type: DiagnosticsProperty<TextEditingController>, name: controller, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextEditingController, defaultLevel: info}, {description: null, type: DiagnosticsProperty<FocusNode>, name: focusNode, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FocusNode, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<bool>, name: enabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null}, {description: InputDecoration(hintText: "Search for albums", focusedBorder: UnderlineInputBorder(), enabledBorder: UnderlineInputBorder()), type: DiagnosticsProperty<InputDecoration>, name: decoration, style: singleLine, allowNameWrap: true, properties: [], defaultValue: InputDecoration(), missingIfNull: false, propertyType: InputDecoration, defaultLevel: info}, {description: TextInputType(name: TextInputType.text, signed: null, decimal: null), type: DiagnosticsProperty<TextInputType>, name: keyboardType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextInputType(name: TextInputType.text, signed: null, decimal: null), missingIfNull: false, propertyType: TextInputType, defaultLevel: info}, {description: TextStyle(debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none), type: DiagnosticsProperty<TextStyle>, name: style, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextStyle, defaultLevel: info, isDiagnosticableValue: true}, {description: false, type: DiagnosticsProperty<bool>, name: autofocus, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: •, type: DiagnosticsProperty<String>, name: obscuringCharacter, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: •, missingIfNull: false, propertyType: String, defaultLevel: info, value: •}, {description: false, type: DiagnosticsProperty<bool>, name: obscureText, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: true, type: DiagnosticsProperty<bool>, name: autocorrect, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: enabled, type: EnumProperty<SmartDashesType>, name: smartDashesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartDashesType.enabled, missingIfNull: false, propertyType: SmartDashesType, defaultLevel: info}, {description: enabled, type: EnumProperty<SmartQuotesType>, name: smartQuotesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartQuotesType.enabled, missingIfNull: false, propertyType: SmartQuotesType, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: enableSuggestions, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: 1, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 1, missingIfNull: false, propertyType: int, defaultLevel: info, value: 1, numberToString: 1}, {description: null, type: IntProperty, name: minLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: false, type: DiagnosticsProperty<bool>, name: expands, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: null, type: IntProperty, name: maxLength, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<MaxLengthEnforcement>, name: maxLengthEnforcement, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: MaxLengthEnforcement, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextInputAction>, name: textInputAction, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextInputAction, defaultLevel: info, value: null}, {description: none, type: EnumProperty<TextCapitalization>, name: textCapitalization, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextCapitalization.none, missingIfNull: false, propertyType: TextCapitalization, defaultLevel: info}, {description: start, type: EnumProperty<TextAlign>, name: textAlign, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextAlign.start, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: DiagnosticsProperty<TextAlignVertical>, name: textAlignVertical, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlignVertical, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: 2.0, type: DoubleProperty, name: cursorWidth, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 2.0, missingIfNull: false, propertyType: double, defaultLevel: info, value: 2.0, numberToString: 2.0}, {description: null, type: DoubleProperty, name: cursorHeight, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DiagnosticsProperty<Radius>, name: cursorRadius, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Radius, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: cursorColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Brightness>, name: keyboardAppearance, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Brightness, defaultLevel: info, value: null}, {description: EdgeInsets.all(20.0), type: DiagnosticsProperty<EdgeInsetsGeometry>, name: scrollPadding, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: EdgeInsets.all(20.0), missingIfNull: false, propertyType: EdgeInsetsGeometry, defaultLevel: info}, {description: true, type: FlagProperty, name: selectionEnabled, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true, ifFalse: selection disabled}, {description: null, type: DiagnosticsProperty<TextSelectionControls>, name: selectionControls, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextSelectionControls, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollController>, name: scrollController, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollController, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollPhysics>, name: scrollPhysics, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollPhysics, defaultLevel: info, value: null}, {description: Clip.hardEdge, type: DiagnosticsProperty<Clip>, name: clipBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: Clip.hardEdge, missingIfNull: false, propertyType: Clip, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: scribbleEnabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: true, type: DiagnosticsProperty<bool>, name: enableIMEPersonalizedLearning, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: null, type: DiagnosticsProperty<SpellCheckConfiguration>, name: spellCheckConfiguration, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: SpellCheckConfiguration, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, MediaQuery, UnmanagedRestorationScope, _InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#57ad9]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TextFieldState#dc5e3, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TextField, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:09.899573 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:32:10.044603 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:10.045854 >>> {command: enter_text, text: }
2023-03-06 22:32:10.193261 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:10.193993 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:32:11.138694 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:11.139522 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:32:12.154246 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:12.156665 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:32:13.245738 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:13.245969 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 22:32:13.261071 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:13.261504 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:32:14.301142 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:14.302197 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:32:15.339638 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:15.340616 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:32:16.366098 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:16.366849 >>> {command: get_diagnostics_tree, finderType: ByText, text: Sun Yan-Zi, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:32:17.416946 <<< {isError: false, response: {description: Text, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 192, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 192}, {description: Text, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: "Sun Yan-Zi", type: StringProperty, name: data, showName: false, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: String, defaultLevel: info, value: Sun Yan-Zi, quoted: true}, {description: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, type: MessageProperty, name: debugLabel, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: false, type: DiagnosticsProperty<bool>, name: inherit, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: Color(0xffc4a35a), type: ColorProperty, name: color, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, valueProperties: {red: 196, green: 163, blue: 90, alpha: 255}}, {description: null, type: ColorProperty, name: backgroundColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: .SF UI Text, type: StringProperty, name: family, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: String, defaultLevel: info, value: .SF UI Text, quoted: false}, {description: null, type: IterableProperty<String>, name: familyFallback, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, ifEmpty: [], missingIfNull: false, propertyType: Iterable<String>, defaultLevel: info, value: null}, {description: 22.0, type: DoubleProperty, name: size, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: 22.0, numberToString: 22.0}, {description: 700, type: DiagnosticsProperty<FontWeight>, name: weight, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontWeight, defaultLevel: info}, {description: null, type: EnumProperty<FontStyle>, name: style, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontStyle, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: letterSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DoubleProperty, name: wordSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: alphabetic, type: EnumProperty<TextBaseline>, name: baseline, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextBaseline, defaultLevel: info}, {description: null, type: DoubleProperty, name: height, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: null, type: EnumProperty<TextLeadingDistribution>, name: leadingDistribution, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextLeadingDistribution, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: foreground, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: background, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: decorationColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: fine, value: null}, {description: TextDecoration.none, type: DiagnosticsProperty<TextDecoration>, name: decoration, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDecoration, defaultLevel: hidden}, {description: TextDecoration.none, type: MessageProperty, name: decoration, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: decorationThickness, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: center, type: EnumProperty<TextAlign>, name: textAlign, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: FlagProperty, name: softWrap, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null, ifTrue: wrapping at box width, ifFalse: no wrapping except at line break characters}, {description: null, type: EnumProperty<TextOverflow>, name: overflow, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextOverflow, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: textScaleFactor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<TextWidthBasis>, name: textWidthBasis, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextWidthBasis, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<TextHeightBehavior>, name: textHeightBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextHeightBehavior, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: Text, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:17.419298 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:32:18.527735 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:18.528586 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:32:19.242980 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:19.243703 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:32:19.263114 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:19.263680 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:32:19.278819 <<< {isError: true, response: Uncaught extension error while executing get_diagnostics_tree: Bad state: Too many elements
#0      Iterable.single (dart:core/iterable.dart:656:24)
#1      CommandHandlerFactory._getDiagnosticsTree (package:flutter_driver/src/common/handler_factory.dart:362:47)
<asynchronous suspension>
#2      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#3      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:19.292283 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:32:19.317605 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:19.317814 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:32:19.453437 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:19.455416 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:32:19.917608 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:19.918090 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:32:19.973787 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:19.974785 >>> {command: get_diagnostics_tree, finderType: ByType, type: TitleDescriptionWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:32:20.386189 <<< {isError: true, response: Uncaught extension error while executing get_diagnostics_tree: Bad state: Too many elements
#0      Iterable.single (dart:core/iterable.dart:656:24)
#1      CommandHandlerFactory._getDiagnosticsTree (package:flutter_driver/src/common/handler_factory.dart:362:47)
<asynchronous suspension>
#2      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#3      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:20.389231 >>> {command: tap, finderType: PageBack}
2023-03-06 22:32:20.435544 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:20.435816 >>> {command: waitForAbsent, finderType: ByText, text: Music App}
2023-03-06 22:32:22.222870 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:22.224380 >>> {command: tap, finderType: PageBack}
2023-03-06 22:32:22.278836 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:22.279609 >>> {command: waitForAbsent, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:32:23.402979 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:23.403730 >>> {command: tap, finderType: PageBack}
2023-03-06 22:32:24.425297 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:24.425714 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:32:24.806110 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:24.807084 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:32:24.814341 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:24.815070 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:32:24.823273 <<< {isError: false, response: {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 168, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 168}, {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: [<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#57ad9]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: AlbumsWidget, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:24.824712 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:32:24.830228 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:32:24.830603 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:32:24.864369 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:23.630356 >>> {command: get_health}
2023-03-06 22:36:23.716648 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:23.717763 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 22:36:25.328885 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:25.335965 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:36:25.416147 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:25.422200 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:36:25.426973 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:25.427277 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:36:25.430180 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:25.430930 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:36:25.538971 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:25.540426 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 22:36:25.946094 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:25.946504 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 22:36:25.951116 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:25.953653 >>> {command: get_diagnostics_tree, finderType: ByType, type: TextField, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:36:26.023007 <<< {isError: false, response: {description: TextField, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 174, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 174}, {description: TextField, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: TextEditingController#c277e(TextEditingValue(text: ┤├, selection: TextSelection.invalid, composing: TextRange(start: -1, end: -1))), type: DiagnosticsProperty<TextEditingController>, name: controller, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextEditingController, defaultLevel: info}, {description: null, type: DiagnosticsProperty<FocusNode>, name: focusNode, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FocusNode, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<bool>, name: enabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null}, {description: InputDecoration(hintText: "Search for albums", focusedBorder: UnderlineInputBorder(), enabledBorder: UnderlineInputBorder()), type: DiagnosticsProperty<InputDecoration>, name: decoration, style: singleLine, allowNameWrap: true, properties: [], defaultValue: InputDecoration(), missingIfNull: false, propertyType: InputDecoration, defaultLevel: info}, {description: TextInputType(name: TextInputType.text, signed: null, decimal: null), type: DiagnosticsProperty<TextInputType>, name: keyboardType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextInputType(name: TextInputType.text, signed: null, decimal: null), missingIfNull: false, propertyType: TextInputType, defaultLevel: info}, {description: TextStyle(debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none), type: DiagnosticsProperty<TextStyle>, name: style, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextStyle, defaultLevel: info, isDiagnosticableValue: true}, {description: false, type: DiagnosticsProperty<bool>, name: autofocus, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: •, type: DiagnosticsProperty<String>, name: obscuringCharacter, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: •, missingIfNull: false, propertyType: String, defaultLevel: info, value: •}, {description: false, type: DiagnosticsProperty<bool>, name: obscureText, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: true, type: DiagnosticsProperty<bool>, name: autocorrect, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: enabled, type: EnumProperty<SmartDashesType>, name: smartDashesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartDashesType.enabled, missingIfNull: false, propertyType: SmartDashesType, defaultLevel: info}, {description: enabled, type: EnumProperty<SmartQuotesType>, name: smartQuotesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartQuotesType.enabled, missingIfNull: false, propertyType: SmartQuotesType, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: enableSuggestions, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: 1, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 1, missingIfNull: false, propertyType: int, defaultLevel: info, value: 1, numberToString: 1}, {description: null, type: IntProperty, name: minLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: false, type: DiagnosticsProperty<bool>, name: expands, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: null, type: IntProperty, name: maxLength, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<MaxLengthEnforcement>, name: maxLengthEnforcement, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: MaxLengthEnforcement, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextInputAction>, name: textInputAction, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextInputAction, defaultLevel: info, value: null}, {description: none, type: EnumProperty<TextCapitalization>, name: textCapitalization, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextCapitalization.none, missingIfNull: false, propertyType: TextCapitalization, defaultLevel: info}, {description: start, type: EnumProperty<TextAlign>, name: textAlign, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextAlign.start, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: DiagnosticsProperty<TextAlignVertical>, name: textAlignVertical, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlignVertical, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: 2.0, type: DoubleProperty, name: cursorWidth, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 2.0, missingIfNull: false, propertyType: double, defaultLevel: info, value: 2.0, numberToString: 2.0}, {description: null, type: DoubleProperty, name: cursorHeight, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DiagnosticsProperty<Radius>, name: cursorRadius, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Radius, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: cursorColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Brightness>, name: keyboardAppearance, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Brightness, defaultLevel: info, value: null}, {description: EdgeInsets.all(20.0), type: DiagnosticsProperty<EdgeInsetsGeometry>, name: scrollPadding, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: EdgeInsets.all(20.0), missingIfNull: false, propertyType: EdgeInsetsGeometry, defaultLevel: info}, {description: true, type: FlagProperty, name: selectionEnabled, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true, ifFalse: selection disabled}, {description: null, type: DiagnosticsProperty<TextSelectionControls>, name: selectionControls, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextSelectionControls, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollController>, name: scrollController, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollController, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollPhysics>, name: scrollPhysics, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollPhysics, defaultLevel: info, value: null}, {description: Clip.hardEdge, type: DiagnosticsProperty<Clip>, name: clipBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: Clip.hardEdge, missingIfNull: false, propertyType: Clip, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: scribbleEnabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: true, type: DiagnosticsProperty<bool>, name: enableIMEPersonalizedLearning, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: null, type: DiagnosticsProperty<SpellCheckConfiguration>, name: spellCheckConfiguration, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: SpellCheckConfiguration, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, MediaQuery, UnmanagedRestorationScope, _InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#ed900]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TextFieldState#41fa6, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TextField, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:26.025268 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:36:26.169218 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:26.170783 >>> {command: enter_text, text: }
2023-03-06 22:36:26.178905 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:26.179310 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:36:27.267442 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:27.268219 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:36:28.339897 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:28.342676 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:36:29.431463 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:29.432493 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 22:36:29.447473 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:29.447996 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:36:30.481596 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:30.482428 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:36:31.505128 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:31.505998 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:36:32.530961 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:32.532340 >>> {command: get_diagnostics_tree, finderType: ByText, text: Sun Yan-Zi, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:36:33.582825 <<< {isError: false, response: {description: Text, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 192, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 192}, {description: Text, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: "Sun Yan-Zi", type: StringProperty, name: data, showName: false, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: String, defaultLevel: info, value: Sun Yan-Zi, quoted: true}, {description: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, type: MessageProperty, name: debugLabel, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: false, type: DiagnosticsProperty<bool>, name: inherit, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: Color(0xffc4a35a), type: ColorProperty, name: color, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, valueProperties: {red: 196, green: 163, blue: 90, alpha: 255}}, {description: null, type: ColorProperty, name: backgroundColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: .SF UI Text, type: StringProperty, name: family, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: String, defaultLevel: info, value: .SF UI Text, quoted: false}, {description: null, type: IterableProperty<String>, name: familyFallback, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, ifEmpty: [], missingIfNull: false, propertyType: Iterable<String>, defaultLevel: info, value: null}, {description: 22.0, type: DoubleProperty, name: size, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: 22.0, numberToString: 22.0}, {description: 700, type: DiagnosticsProperty<FontWeight>, name: weight, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontWeight, defaultLevel: info}, {description: null, type: EnumProperty<FontStyle>, name: style, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontStyle, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: letterSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DoubleProperty, name: wordSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: alphabetic, type: EnumProperty<TextBaseline>, name: baseline, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextBaseline, defaultLevel: info}, {description: null, type: DoubleProperty, name: height, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: null, type: EnumProperty<TextLeadingDistribution>, name: leadingDistribution, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextLeadingDistribution, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: foreground, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: background, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: decorationColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: fine, value: null}, {description: TextDecoration.none, type: DiagnosticsProperty<TextDecoration>, name: decoration, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDecoration, defaultLevel: hidden}, {description: TextDecoration.none, type: MessageProperty, name: decoration, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: decorationThickness, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: center, type: EnumProperty<TextAlign>, name: textAlign, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: FlagProperty, name: softWrap, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null, ifTrue: wrapping at box width, ifFalse: no wrapping except at line break characters}, {description: null, type: EnumProperty<TextOverflow>, name: overflow, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextOverflow, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: textScaleFactor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<TextWidthBasis>, name: textWidthBasis, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextWidthBasis, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<TextHeightBehavior>, name: textHeightBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextHeightBehavior, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: Text, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:33.585414 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:36:34.693424 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:34.694983 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:36:35.559028 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:35.559769 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:36:35.581025 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:35.581530 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:36:35.598275 <<< {isError: true, response: Uncaught extension error while executing get_diagnostics_tree: Bad state: Too many elements
#0      Iterable.single (dart:core/iterable.dart:656:24)
#1      CommandHandlerFactory._getDiagnosticsTree (package:flutter_driver/src/common/handler_factory.dart:362:47)
<asynchronous suspension>
#2      FlutterDriverExtension.call (package:flutter_driver/src/extension/extension.dart:372:31)
<asynchronous suspension>
#3      BindingBase.registerServiceExtension.<anonymous closure> (package:flutter/src/foundation/binding.dart:856:18)
<asynchronous suspension>
, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:35.612827 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:36:35.635639 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:35.635886 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:36:35.773292 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:35.775516 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:36:36.242663 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:36.243253 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:36:36.309797 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:36.310706 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:36:36.719991 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:36.721735 >>> {command: tap, finderType: PageBack}
2023-03-06 22:36:36.769337 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:36.769677 >>> {command: waitForAbsent, finderType: ByText, text: Music App}
2023-03-06 22:36:38.241792 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:38.242266 >>> {command: tap, finderType: PageBack}
2023-03-06 22:36:38.293400 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:38.294072 >>> {command: waitForAbsent, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:36:39.405 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:39.405587 >>> {command: tap, finderType: PageBack}
2023-03-06 22:36:40.477085 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:40.477737 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:36:40.831436 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:40.832582 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:36:40.836559 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:40.837247 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:36:40.844859 <<< {isError: false, response: {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 168, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 168}, {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: [<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#ed900]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: AlbumsWidget, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:40.846480 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:36:40.850965 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:36:40.851388 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:36:40.864909 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:34.988314 >>> {command: get_health}
2023-03-06 22:38:35.076242 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:35.079841 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 22:38:36.790385 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:36.798681 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:38:36.872968 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:36.880588 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:38:36.905570 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:36.906095 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:38:36.909069 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:36.910020 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:38:37.018874 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:37.019957 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 22:38:37.452152 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:37.452586 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 22:38:37.457613 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:37.459708 >>> {command: get_diagnostics_tree, finderType: ByType, type: TextField, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:38:37.538410 <<< {isError: false, response: {description: TextField, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 174, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 174}, {description: TextField, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: TextEditingController#2615c(TextEditingValue(text: ┤├, selection: TextSelection.invalid, composing: TextRange(start: -1, end: -1))), type: DiagnosticsProperty<TextEditingController>, name: controller, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextEditingController, defaultLevel: info}, {description: null, type: DiagnosticsProperty<FocusNode>, name: focusNode, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FocusNode, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<bool>, name: enabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null}, {description: InputDecoration(hintText: "Search for albums", focusedBorder: UnderlineInputBorder(), enabledBorder: UnderlineInputBorder()), type: DiagnosticsProperty<InputDecoration>, name: decoration, style: singleLine, allowNameWrap: true, properties: [], defaultValue: InputDecoration(), missingIfNull: false, propertyType: InputDecoration, defaultLevel: info}, {description: TextInputType(name: TextInputType.text, signed: null, decimal: null), type: DiagnosticsProperty<TextInputType>, name: keyboardType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextInputType(name: TextInputType.text, signed: null, decimal: null), missingIfNull: false, propertyType: TextInputType, defaultLevel: info}, {description: TextStyle(debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none), type: DiagnosticsProperty<TextStyle>, name: style, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextStyle, defaultLevel: info, isDiagnosticableValue: true}, {description: false, type: DiagnosticsProperty<bool>, name: autofocus, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: •, type: DiagnosticsProperty<String>, name: obscuringCharacter, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: •, missingIfNull: false, propertyType: String, defaultLevel: info, value: •}, {description: false, type: DiagnosticsProperty<bool>, name: obscureText, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: true, type: DiagnosticsProperty<bool>, name: autocorrect, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: enabled, type: EnumProperty<SmartDashesType>, name: smartDashesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartDashesType.enabled, missingIfNull: false, propertyType: SmartDashesType, defaultLevel: info}, {description: enabled, type: EnumProperty<SmartQuotesType>, name: smartQuotesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartQuotesType.enabled, missingIfNull: false, propertyType: SmartQuotesType, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: enableSuggestions, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: 1, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 1, missingIfNull: false, propertyType: int, defaultLevel: info, value: 1, numberToString: 1}, {description: null, type: IntProperty, name: minLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: false, type: DiagnosticsProperty<bool>, name: expands, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: null, type: IntProperty, name: maxLength, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<MaxLengthEnforcement>, name: maxLengthEnforcement, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: MaxLengthEnforcement, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextInputAction>, name: textInputAction, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextInputAction, defaultLevel: info, value: null}, {description: none, type: EnumProperty<TextCapitalization>, name: textCapitalization, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextCapitalization.none, missingIfNull: false, propertyType: TextCapitalization, defaultLevel: info}, {description: start, type: EnumProperty<TextAlign>, name: textAlign, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextAlign.start, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: DiagnosticsProperty<TextAlignVertical>, name: textAlignVertical, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlignVertical, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: 2.0, type: DoubleProperty, name: cursorWidth, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 2.0, missingIfNull: false, propertyType: double, defaultLevel: info, value: 2.0, numberToString: 2.0}, {description: null, type: DoubleProperty, name: cursorHeight, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DiagnosticsProperty<Radius>, name: cursorRadius, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Radius, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: cursorColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Brightness>, name: keyboardAppearance, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Brightness, defaultLevel: info, value: null}, {description: EdgeInsets.all(20.0), type: DiagnosticsProperty<EdgeInsetsGeometry>, name: scrollPadding, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: EdgeInsets.all(20.0), missingIfNull: false, propertyType: EdgeInsetsGeometry, defaultLevel: info}, {description: true, type: FlagProperty, name: selectionEnabled, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true, ifFalse: selection disabled}, {description: null, type: DiagnosticsProperty<TextSelectionControls>, name: selectionControls, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextSelectionControls, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollController>, name: scrollController, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollController, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollPhysics>, name: scrollPhysics, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollPhysics, defaultLevel: info, value: null}, {description: Clip.hardEdge, type: DiagnosticsProperty<Clip>, name: clipBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: Clip.hardEdge, missingIfNull: false, propertyType: Clip, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: scribbleEnabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: true, type: DiagnosticsProperty<bool>, name: enableIMEPersonalizedLearning, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: null, type: DiagnosticsProperty<SpellCheckConfiguration>, name: spellCheckConfiguration, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: SpellCheckConfiguration, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, MediaQuery, UnmanagedRestorationScope, _InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#ca2e9]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TextFieldState#237df, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TextField, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:37.543442 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:38:37.686315 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:37.687315 >>> {command: enter_text, text: }
2023-03-06 22:38:37.696107 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:37.696706 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:38:38.760001 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:38.760875 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:38:39.788363 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:39.791152 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:38:40.884613 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:40.885190 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 22:38:40.900596 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:40.901288 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:38:41.931683 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:41.932585 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:38:42.955767 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:42.956391 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:38:43.980989 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:43.981882 >>> {command: get_diagnostics_tree, finderType: ByText, text: Sun Yan-Zi, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:38:45.022131 <<< {isError: false, response: {description: Text, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 192, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 192}, {description: Text, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: "Sun Yan-Zi", type: StringProperty, name: data, showName: false, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: String, defaultLevel: info, value: Sun Yan-Zi, quoted: true}, {description: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, type: MessageProperty, name: debugLabel, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: false, type: DiagnosticsProperty<bool>, name: inherit, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: Color(0xffc4a35a), type: ColorProperty, name: color, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, valueProperties: {red: 196, green: 163, blue: 90, alpha: 255}}, {description: null, type: ColorProperty, name: backgroundColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: .SF UI Text, type: StringProperty, name: family, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: String, defaultLevel: info, value: .SF UI Text, quoted: false}, {description: null, type: IterableProperty<String>, name: familyFallback, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, ifEmpty: [], missingIfNull: false, propertyType: Iterable<String>, defaultLevel: info, value: null}, {description: 22.0, type: DoubleProperty, name: size, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: 22.0, numberToString: 22.0}, {description: 700, type: DiagnosticsProperty<FontWeight>, name: weight, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontWeight, defaultLevel: info}, {description: null, type: EnumProperty<FontStyle>, name: style, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontStyle, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: letterSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DoubleProperty, name: wordSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: alphabetic, type: EnumProperty<TextBaseline>, name: baseline, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextBaseline, defaultLevel: info}, {description: null, type: DoubleProperty, name: height, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: null, type: EnumProperty<TextLeadingDistribution>, name: leadingDistribution, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextLeadingDistribution, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: foreground, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: background, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: decorationColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: fine, value: null}, {description: TextDecoration.none, type: DiagnosticsProperty<TextDecoration>, name: decoration, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDecoration, defaultLevel: hidden}, {description: TextDecoration.none, type: MessageProperty, name: decoration, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: decorationThickness, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: center, type: EnumProperty<TextAlign>, name: textAlign, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: FlagProperty, name: softWrap, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null, ifTrue: wrapping at box width, ifFalse: no wrapping except at line break characters}, {description: null, type: EnumProperty<TextOverflow>, name: overflow, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextOverflow, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: textScaleFactor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<TextWidthBasis>, name: textWidthBasis, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextWidthBasis, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<TextHeightBehavior>, name: textHeightBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextHeightBehavior, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: Text, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:45.025231 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:38:46.105071 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:46.106938 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:38:46.792337 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:46.793042 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:38:46.821656 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:46.828078 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:38:46.862004 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:46.862444 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:38:46.932683 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:46.933944 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:38:47.412557 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:47.413135 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:38:47.474652 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:47.475052 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:38:47.829187 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:47.832203 >>> {command: tap, finderType: PageBack}
2023-03-06 22:38:47.878981 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:47.879217 >>> {command: waitForAbsent, finderType: ByText, text: Music App}
2023-03-06 22:38:48.335891 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:48.336844 >>> {command: tap, finderType: PageBack}
2023-03-06 22:38:48.391141 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:48.391881 >>> {command: waitForAbsent, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:38:49.509113 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:49.510643 >>> {command: tap, finderType: PageBack}
2023-03-06 22:38:50.580608 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:50.581226 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:38:50.991562 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:50.992249 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:38:50.999737 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:51.000275 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:38:51.008434 <<< {isError: false, response: {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 168, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 168}, {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: [<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#ca2e9]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: AlbumsWidget, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:51.010948 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:38:51.017658 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:38:51.017895 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:38:51.055567 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:53.571476 >>> {command: get_health}
2023-03-06 22:42:53.665300 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:53.666305 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 22:42:55.257587 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:55.264198 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:42:55.345708 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:55.350591 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:42:55.355867 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:55.356112 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:42:55.358693 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:55.359440 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:42:55.473552 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:55.474769 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 22:42:55.896888 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:55.897382 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 22:42:55.902517 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:55.904872 >>> {command: get_diagnostics_tree, finderType: ByType, type: TextField, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:42:55.979153 <<< {isError: false, response: {description: TextField, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 174, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 174}, {description: TextField, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: TextEditingController#29a9f(TextEditingValue(text: ┤├, selection: TextSelection.invalid, composing: TextRange(start: -1, end: -1))), type: DiagnosticsProperty<TextEditingController>, name: controller, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextEditingController, defaultLevel: info}, {description: null, type: DiagnosticsProperty<FocusNode>, name: focusNode, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FocusNode, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<bool>, name: enabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null}, {description: InputDecoration(hintText: "Search for albums", focusedBorder: UnderlineInputBorder(), enabledBorder: UnderlineInputBorder()), type: DiagnosticsProperty<InputDecoration>, name: decoration, style: singleLine, allowNameWrap: true, properties: [], defaultValue: InputDecoration(), missingIfNull: false, propertyType: InputDecoration, defaultLevel: info}, {description: TextInputType(name: TextInputType.text, signed: null, decimal: null), type: DiagnosticsProperty<TextInputType>, name: keyboardType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextInputType(name: TextInputType.text, signed: null, decimal: null), missingIfNull: false, propertyType: TextInputType, defaultLevel: info}, {description: TextStyle(debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none), type: DiagnosticsProperty<TextStyle>, name: style, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextStyle, defaultLevel: info, isDiagnosticableValue: true}, {description: false, type: DiagnosticsProperty<bool>, name: autofocus, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: •, type: DiagnosticsProperty<String>, name: obscuringCharacter, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: •, missingIfNull: false, propertyType: String, defaultLevel: info, value: •}, {description: false, type: DiagnosticsProperty<bool>, name: obscureText, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: true, type: DiagnosticsProperty<bool>, name: autocorrect, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: enabled, type: EnumProperty<SmartDashesType>, name: smartDashesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartDashesType.enabled, missingIfNull: false, propertyType: SmartDashesType, defaultLevel: info}, {description: enabled, type: EnumProperty<SmartQuotesType>, name: smartQuotesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartQuotesType.enabled, missingIfNull: false, propertyType: SmartQuotesType, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: enableSuggestions, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: 1, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 1, missingIfNull: false, propertyType: int, defaultLevel: info, value: 1, numberToString: 1}, {description: null, type: IntProperty, name: minLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: false, type: DiagnosticsProperty<bool>, name: expands, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: null, type: IntProperty, name: maxLength, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<MaxLengthEnforcement>, name: maxLengthEnforcement, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: MaxLengthEnforcement, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextInputAction>, name: textInputAction, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextInputAction, defaultLevel: info, value: null}, {description: none, type: EnumProperty<TextCapitalization>, name: textCapitalization, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextCapitalization.none, missingIfNull: false, propertyType: TextCapitalization, defaultLevel: info}, {description: start, type: EnumProperty<TextAlign>, name: textAlign, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextAlign.start, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: DiagnosticsProperty<TextAlignVertical>, name: textAlignVertical, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlignVertical, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: 2.0, type: DoubleProperty, name: cursorWidth, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 2.0, missingIfNull: false, propertyType: double, defaultLevel: info, value: 2.0, numberToString: 2.0}, {description: null, type: DoubleProperty, name: cursorHeight, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DiagnosticsProperty<Radius>, name: cursorRadius, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Radius, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: cursorColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Brightness>, name: keyboardAppearance, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Brightness, defaultLevel: info, value: null}, {description: EdgeInsets.all(20.0), type: DiagnosticsProperty<EdgeInsetsGeometry>, name: scrollPadding, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: EdgeInsets.all(20.0), missingIfNull: false, propertyType: EdgeInsetsGeometry, defaultLevel: info}, {description: true, type: FlagProperty, name: selectionEnabled, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true, ifFalse: selection disabled}, {description: null, type: DiagnosticsProperty<TextSelectionControls>, name: selectionControls, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextSelectionControls, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollController>, name: scrollController, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollController, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollPhysics>, name: scrollPhysics, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollPhysics, defaultLevel: info, value: null}, {description: Clip.hardEdge, type: DiagnosticsProperty<Clip>, name: clipBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: Clip.hardEdge, missingIfNull: false, propertyType: Clip, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: scribbleEnabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: true, type: DiagnosticsProperty<bool>, name: enableIMEPersonalizedLearning, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: null, type: DiagnosticsProperty<SpellCheckConfiguration>, name: spellCheckConfiguration, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: SpellCheckConfiguration, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, MediaQuery, UnmanagedRestorationScope, _InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#6bd5d]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TextFieldState#485d3, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TextField, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:55.981433 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:42:56.136058 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:56.137447 >>> {command: enter_text, text: }
2023-03-06 22:42:56.146013 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:56.146435 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:42:57.237368 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:57.238771 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:42:58.305936 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:58.308104 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:42:59.395612 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:59.396187 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 22:42:59.411631 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:42:59.412507 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:43:00.450824 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:00.452027 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:43:01.486268 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:01.487348 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:43:02.512283 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:02.513020 >>> {command: get_diagnostics_tree, finderType: ByText, text: Sun Yan-Zi, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:43:03.563085 <<< {isError: false, response: {description: Text, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 192, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 192}, {description: Text, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: "Sun Yan-Zi", type: StringProperty, name: data, showName: false, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: String, defaultLevel: info, value: Sun Yan-Zi, quoted: true}, {description: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, type: MessageProperty, name: debugLabel, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: false, type: DiagnosticsProperty<bool>, name: inherit, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: Color(0xffc4a35a), type: ColorProperty, name: color, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, valueProperties: {red: 196, green: 163, blue: 90, alpha: 255}}, {description: null, type: ColorProperty, name: backgroundColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: .SF UI Text, type: StringProperty, name: family, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: String, defaultLevel: info, value: .SF UI Text, quoted: false}, {description: null, type: IterableProperty<String>, name: familyFallback, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, ifEmpty: [], missingIfNull: false, propertyType: Iterable<String>, defaultLevel: info, value: null}, {description: 22.0, type: DoubleProperty, name: size, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: 22.0, numberToString: 22.0}, {description: 700, type: DiagnosticsProperty<FontWeight>, name: weight, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontWeight, defaultLevel: info}, {description: null, type: EnumProperty<FontStyle>, name: style, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontStyle, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: letterSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DoubleProperty, name: wordSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: alphabetic, type: EnumProperty<TextBaseline>, name: baseline, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextBaseline, defaultLevel: info}, {description: null, type: DoubleProperty, name: height, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: null, type: EnumProperty<TextLeadingDistribution>, name: leadingDistribution, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextLeadingDistribution, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: foreground, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: background, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: decorationColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: fine, value: null}, {description: TextDecoration.none, type: DiagnosticsProperty<TextDecoration>, name: decoration, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDecoration, defaultLevel: hidden}, {description: TextDecoration.none, type: MessageProperty, name: decoration, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: decorationThickness, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: center, type: EnumProperty<TextAlign>, name: textAlign, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: FlagProperty, name: softWrap, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null, ifTrue: wrapping at box width, ifFalse: no wrapping except at line break characters}, {description: null, type: EnumProperty<TextOverflow>, name: overflow, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextOverflow, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: textScaleFactor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<TextWidthBasis>, name: textWidthBasis, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextWidthBasis, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<TextHeightBehavior>, name: textHeightBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextHeightBehavior, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: Text, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:03.565500 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:43:04.659741 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:04.661148 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:43:05.384067 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:05.384751 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:43:05.405565 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:05.407554 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:43:05.425671 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:05.426440 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:43:05.512556 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:05.514682 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:43:06.064622 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:06.065339 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:43:06.127910 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:06.128474 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:43:06.560210 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:06.562174 >>> {command: tap, finderType: PageBack}
2023-03-06 22:43:06.616919 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:06.617521 >>> {command: waitForAbsent, finderType: ByText, text: Music App}
2023-03-06 22:43:08.060140 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:08.061266 >>> {command: tap, finderType: PageBack}
2023-03-06 22:43:08.131842 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:08.132886 >>> {command: waitForAbsent, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:43:09.267353 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:09.267876 >>> {command: tap, finderType: PageBack}
2023-03-06 22:43:10.305739 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:10.306026 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:43:10.681093 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:10.681771 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:43:10.689359 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:10.690110 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:43:10.697755 <<< {isError: false, response: {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 168, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 168}, {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: [<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#6bd5d]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: AlbumsWidget, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:10.699352 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:43:10.705194 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:43:10.705611 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:43:10.739790 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:29.512972 >>> {command: get_health}
2023-03-06 22:48:29.598161 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:29.599311 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 22:48:31.198402 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:31.207122 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:48:31.302790 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:31.310355 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:48:31.317758 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:31.318377 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:48:31.322343 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:31.324821 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:48:31.438499 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:31.439272 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 22:48:31.886815 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:31.888978 >>> {command: get_diagnostics_tree, finderType: ByType, type: SearchPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:48:31.917454 <<< {isError: false, response: {description: SearchPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: SearchPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#4f6a4]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _SearchPageState#f70f3, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: SearchPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:31.919328 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 22:48:31.925578 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:31.926063 >>> {command: get_diagnostics_tree, finderType: ByType, type: TextField, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:48:31.990957 <<< {isError: false, response: {description: TextField, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 174, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 174}, {description: TextField, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: TextEditingController#20d51(TextEditingValue(text: ┤├, selection: TextSelection.invalid, composing: TextRange(start: -1, end: -1))), type: DiagnosticsProperty<TextEditingController>, name: controller, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextEditingController, defaultLevel: info}, {description: null, type: DiagnosticsProperty<FocusNode>, name: focusNode, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FocusNode, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<bool>, name: enabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null}, {description: InputDecoration(hintText: "Search for albums", focusedBorder: UnderlineInputBorder(), enabledBorder: UnderlineInputBorder()), type: DiagnosticsProperty<InputDecoration>, name: decoration, style: singleLine, allowNameWrap: true, properties: [], defaultValue: InputDecoration(), missingIfNull: false, propertyType: InputDecoration, defaultLevel: info}, {description: TextInputType(name: TextInputType.text, signed: null, decimal: null), type: DiagnosticsProperty<TextInputType>, name: keyboardType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextInputType(name: TextInputType.text, signed: null, decimal: null), missingIfNull: false, propertyType: TextInputType, defaultLevel: info}, {description: TextStyle(debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none), type: DiagnosticsProperty<TextStyle>, name: style, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextStyle, defaultLevel: info, isDiagnosticableValue: true}, {description: false, type: DiagnosticsProperty<bool>, name: autofocus, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: •, type: DiagnosticsProperty<String>, name: obscuringCharacter, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: •, missingIfNull: false, propertyType: String, defaultLevel: info, value: •}, {description: false, type: DiagnosticsProperty<bool>, name: obscureText, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: true, type: DiagnosticsProperty<bool>, name: autocorrect, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: enabled, type: EnumProperty<SmartDashesType>, name: smartDashesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartDashesType.enabled, missingIfNull: false, propertyType: SmartDashesType, defaultLevel: info}, {description: enabled, type: EnumProperty<SmartQuotesType>, name: smartQuotesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartQuotesType.enabled, missingIfNull: false, propertyType: SmartQuotesType, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: enableSuggestions, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: 1, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 1, missingIfNull: false, propertyType: int, defaultLevel: info, value: 1, numberToString: 1}, {description: null, type: IntProperty, name: minLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: false, type: DiagnosticsProperty<bool>, name: expands, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: null, type: IntProperty, name: maxLength, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<MaxLengthEnforcement>, name: maxLengthEnforcement, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: MaxLengthEnforcement, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextInputAction>, name: textInputAction, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextInputAction, defaultLevel: info, value: null}, {description: none, type: EnumProperty<TextCapitalization>, name: textCapitalization, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextCapitalization.none, missingIfNull: false, propertyType: TextCapitalization, defaultLevel: info}, {description: start, type: EnumProperty<TextAlign>, name: textAlign, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextAlign.start, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: DiagnosticsProperty<TextAlignVertical>, name: textAlignVertical, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlignVertical, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: 2.0, type: DoubleProperty, name: cursorWidth, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 2.0, missingIfNull: false, propertyType: double, defaultLevel: info, value: 2.0, numberToString: 2.0}, {description: null, type: DoubleProperty, name: cursorHeight, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DiagnosticsProperty<Radius>, name: cursorRadius, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Radius, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: cursorColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Brightness>, name: keyboardAppearance, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Brightness, defaultLevel: info, value: null}, {description: EdgeInsets.all(20.0), type: DiagnosticsProperty<EdgeInsetsGeometry>, name: scrollPadding, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: EdgeInsets.all(20.0), missingIfNull: false, propertyType: EdgeInsetsGeometry, defaultLevel: info}, {description: true, type: FlagProperty, name: selectionEnabled, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true, ifFalse: selection disabled}, {description: null, type: DiagnosticsProperty<TextSelectionControls>, name: selectionControls, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextSelectionControls, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollController>, name: scrollController, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollController, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollPhysics>, name: scrollPhysics, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollPhysics, defaultLevel: info, value: null}, {description: Clip.hardEdge, type: DiagnosticsProperty<Clip>, name: clipBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: Clip.hardEdge, missingIfNull: false, propertyType: Clip, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: scribbleEnabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: true, type: DiagnosticsProperty<bool>, name: enableIMEPersonalizedLearning, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: null, type: DiagnosticsProperty<SpellCheckConfiguration>, name: spellCheckConfiguration, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: SpellCheckConfiguration, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, MediaQuery, UnmanagedRestorationScope, _InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#4f6a4]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TextFieldState#c6610, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TextField, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:31.995918 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:48:32.132527 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:32.134388 >>> {command: enter_text, text: }
2023-03-06 22:48:32.144334 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:32.145078 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:48:33.236700 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:33.237971 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:48:34.304187 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:34.307966 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:48:35.387198 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:35.388315 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 22:48:35.408852 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:35.409546 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:48:36.448144 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:36.449034 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:48:37.465713 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:37.467032 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:48:38.495044 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:38.495678 >>> {command: get_diagnostics_tree, finderType: ByText, text: Sun Yan-Zi, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:48:39.547294 <<< {isError: false, response: {description: Text, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 192, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 192}, {description: Text, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: "Sun Yan-Zi", type: StringProperty, name: data, showName: false, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: String, defaultLevel: info, value: Sun Yan-Zi, quoted: true}, {description: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, type: MessageProperty, name: debugLabel, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: false, type: DiagnosticsProperty<bool>, name: inherit, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: Color(0xffc4a35a), type: ColorProperty, name: color, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, valueProperties: {red: 196, green: 163, blue: 90, alpha: 255}}, {description: null, type: ColorProperty, name: backgroundColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: .SF UI Text, type: StringProperty, name: family, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: String, defaultLevel: info, value: .SF UI Text, quoted: false}, {description: null, type: IterableProperty<String>, name: familyFallback, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, ifEmpty: [], missingIfNull: false, propertyType: Iterable<String>, defaultLevel: info, value: null}, {description: 22.0, type: DoubleProperty, name: size, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: 22.0, numberToString: 22.0}, {description: 700, type: DiagnosticsProperty<FontWeight>, name: weight, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontWeight, defaultLevel: info}, {description: null, type: EnumProperty<FontStyle>, name: style, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontStyle, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: letterSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DoubleProperty, name: wordSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: alphabetic, type: EnumProperty<TextBaseline>, name: baseline, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextBaseline, defaultLevel: info}, {description: null, type: DoubleProperty, name: height, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: null, type: EnumProperty<TextLeadingDistribution>, name: leadingDistribution, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextLeadingDistribution, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: foreground, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: background, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: decorationColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: fine, value: null}, {description: TextDecoration.none, type: DiagnosticsProperty<TextDecoration>, name: decoration, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDecoration, defaultLevel: hidden}, {description: TextDecoration.none, type: MessageProperty, name: decoration, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: decorationThickness, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: center, type: EnumProperty<TextAlign>, name: textAlign, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: FlagProperty, name: softWrap, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null, ifTrue: wrapping at box width, ifFalse: no wrapping except at line break characters}, {description: null, type: EnumProperty<TextOverflow>, name: overflow, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextOverflow, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: textScaleFactor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<TextWidthBasis>, name: textWidthBasis, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextWidthBasis, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<TextHeightBehavior>, name: textHeightBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextHeightBehavior, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: Text, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:39.550863 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:48:40.695445 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:40.697202 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:48:41.609014 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:41.609495 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:48:41.645762 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:41.648611 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:48:41.694816 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:41.695442 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:48:41.855695 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:41.857693 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:48:42.369683 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:42.370478 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:48:42.433448 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:42.434137 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:48:42.857678 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:42.861513 >>> {command: tap, finderType: PageBack}
2023-03-06 22:48:42.951740 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:42.952545 >>> {command: waitForAbsent, finderType: ByText, text: Music App}
2023-03-06 22:48:43.346783 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:43.347249 >>> {command: tap, finderType: PageBack}
2023-03-06 22:48:43.405579 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:43.406018 >>> {command: waitForAbsent, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:48:44.524172 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:44.525356 >>> {command: tap, finderType: PageBack}
2023-03-06 22:48:45.643362 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:45.644351 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:48:46.069211 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:46.070242 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:48:46.077323 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:46.077942 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:48:46.086509 <<< {isError: false, response: {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 168, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 168}, {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: [<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#4f6a4]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: AlbumsWidget, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:46.089312 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:48:46.096434 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:48:46.097010 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:48:46.133597 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:54:57.869473 >>> {command: get_health}
2023-03-06 22:54:57.971151 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:54:57.974747 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 22:54:59.661883 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:54:59.668924 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:54:59.751739 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:54:59.759110 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:54:59.767211 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:54:59.768281 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 22:54:59.777911 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:54:59.780357 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:54:59.893747 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:54:59.894544 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 22:55:00.330506 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:00.332458 >>> {command: get_diagnostics_tree, finderType: ByType, type: SearchPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:55:00.360172 <<< {isError: false, response: {description: SearchPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: SearchPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#2eef7]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _SearchPageState#775e3, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: SearchPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:00.362300 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 22:55:00.373109 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:00.373589 >>> {command: get_diagnostics_tree, finderType: ByType, type: TextField, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:55:00.436946 <<< {isError: false, response: {description: TextField, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 174, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 174}, {description: TextField, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: TextEditingController#8785c(TextEditingValue(text: ┤├, selection: TextSelection.invalid, composing: TextRange(start: -1, end: -1))), type: DiagnosticsProperty<TextEditingController>, name: controller, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextEditingController, defaultLevel: info}, {description: null, type: DiagnosticsProperty<FocusNode>, name: focusNode, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FocusNode, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<bool>, name: enabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null}, {description: InputDecoration(hintText: "Search for albums", focusedBorder: UnderlineInputBorder(), enabledBorder: UnderlineInputBorder()), type: DiagnosticsProperty<InputDecoration>, name: decoration, style: singleLine, allowNameWrap: true, properties: [], defaultValue: InputDecoration(), missingIfNull: false, propertyType: InputDecoration, defaultLevel: info}, {description: TextInputType(name: TextInputType.text, signed: null, decimal: null), type: DiagnosticsProperty<TextInputType>, name: keyboardType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextInputType(name: TextInputType.text, signed: null, decimal: null), missingIfNull: false, propertyType: TextInputType, defaultLevel: info}, {description: TextStyle(debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none), type: DiagnosticsProperty<TextStyle>, name: style, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextStyle, defaultLevel: info, isDiagnosticableValue: true}, {description: false, type: DiagnosticsProperty<bool>, name: autofocus, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: •, type: DiagnosticsProperty<String>, name: obscuringCharacter, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: •, missingIfNull: false, propertyType: String, defaultLevel: info, value: •}, {description: false, type: DiagnosticsProperty<bool>, name: obscureText, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: true, type: DiagnosticsProperty<bool>, name: autocorrect, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: enabled, type: EnumProperty<SmartDashesType>, name: smartDashesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartDashesType.enabled, missingIfNull: false, propertyType: SmartDashesType, defaultLevel: info}, {description: enabled, type: EnumProperty<SmartQuotesType>, name: smartQuotesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartQuotesType.enabled, missingIfNull: false, propertyType: SmartQuotesType, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: enableSuggestions, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: 1, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 1, missingIfNull: false, propertyType: int, defaultLevel: info, value: 1, numberToString: 1}, {description: null, type: IntProperty, name: minLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: false, type: DiagnosticsProperty<bool>, name: expands, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: null, type: IntProperty, name: maxLength, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<MaxLengthEnforcement>, name: maxLengthEnforcement, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: MaxLengthEnforcement, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextInputAction>, name: textInputAction, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextInputAction, defaultLevel: info, value: null}, {description: none, type: EnumProperty<TextCapitalization>, name: textCapitalization, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextCapitalization.none, missingIfNull: false, propertyType: TextCapitalization, defaultLevel: info}, {description: start, type: EnumProperty<TextAlign>, name: textAlign, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextAlign.start, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: DiagnosticsProperty<TextAlignVertical>, name: textAlignVertical, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlignVertical, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: 2.0, type: DoubleProperty, name: cursorWidth, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 2.0, missingIfNull: false, propertyType: double, defaultLevel: info, value: 2.0, numberToString: 2.0}, {description: null, type: DoubleProperty, name: cursorHeight, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DiagnosticsProperty<Radius>, name: cursorRadius, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Radius, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: cursorColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Brightness>, name: keyboardAppearance, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Brightness, defaultLevel: info, value: null}, {description: EdgeInsets.all(20.0), type: DiagnosticsProperty<EdgeInsetsGeometry>, name: scrollPadding, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: EdgeInsets.all(20.0), missingIfNull: false, propertyType: EdgeInsetsGeometry, defaultLevel: info}, {description: true, type: FlagProperty, name: selectionEnabled, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true, ifFalse: selection disabled}, {description: null, type: DiagnosticsProperty<TextSelectionControls>, name: selectionControls, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextSelectionControls, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollController>, name: scrollController, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollController, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollPhysics>, name: scrollPhysics, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollPhysics, defaultLevel: info, value: null}, {description: Clip.hardEdge, type: DiagnosticsProperty<Clip>, name: clipBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: Clip.hardEdge, missingIfNull: false, propertyType: Clip, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: scribbleEnabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: true, type: DiagnosticsProperty<bool>, name: enableIMEPersonalizedLearning, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: null, type: DiagnosticsProperty<SpellCheckConfiguration>, name: spellCheckConfiguration, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: SpellCheckConfiguration, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, MediaQuery, UnmanagedRestorationScope, _InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#2eef7]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TextFieldState#f65c2, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TextField, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:00.442151 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:55:00.588200 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:00.589364 >>> {command: enter_text, text: }
2023-03-06 22:55:00.599829 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:00.600253 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:55:01.662566 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:01.663513 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:55:02.735197 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:02.738221 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 22:55:03.830573 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:03.831080 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 22:55:03.853148 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:03.853590 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 22:55:04.888956 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:04.889551 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 22:55:05.895929 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:05.896527 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:55:06.930644 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:06.931975 >>> {command: get_diagnostics_tree, finderType: ByText, text: Sun Yan-Zi, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:55:07.992388 <<< {isError: false, response: {description: Text, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 192, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 192}, {description: Text, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: "Sun Yan-Zi", type: StringProperty, name: data, showName: false, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: String, defaultLevel: info, value: Sun Yan-Zi, quoted: true}, {description: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, type: MessageProperty, name: debugLabel, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: false, type: DiagnosticsProperty<bool>, name: inherit, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: Color(0xffc4a35a), type: ColorProperty, name: color, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, valueProperties: {red: 196, green: 163, blue: 90, alpha: 255}}, {description: null, type: ColorProperty, name: backgroundColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: .SF UI Text, type: StringProperty, name: family, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: String, defaultLevel: info, value: .SF UI Text, quoted: false}, {description: null, type: IterableProperty<String>, name: familyFallback, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, ifEmpty: [], missingIfNull: false, propertyType: Iterable<String>, defaultLevel: info, value: null}, {description: 22.0, type: DoubleProperty, name: size, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: 22.0, numberToString: 22.0}, {description: 700, type: DiagnosticsProperty<FontWeight>, name: weight, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontWeight, defaultLevel: info}, {description: null, type: EnumProperty<FontStyle>, name: style, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontStyle, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: letterSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DoubleProperty, name: wordSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: alphabetic, type: EnumProperty<TextBaseline>, name: baseline, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextBaseline, defaultLevel: info}, {description: null, type: DoubleProperty, name: height, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: null, type: EnumProperty<TextLeadingDistribution>, name: leadingDistribution, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextLeadingDistribution, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: foreground, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: background, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: decorationColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: fine, value: null}, {description: TextDecoration.none, type: DiagnosticsProperty<TextDecoration>, name: decoration, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDecoration, defaultLevel: hidden}, {description: TextDecoration.none, type: MessageProperty, name: decoration, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: decorationThickness, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: center, type: EnumProperty<TextAlign>, name: textAlign, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: FlagProperty, name: softWrap, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null, ifTrue: wrapping at box width, ifFalse: no wrapping except at line break characters}, {description: null, type: EnumProperty<TextOverflow>, name: overflow, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextOverflow, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: textScaleFactor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<TextWidthBasis>, name: textWidthBasis, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextWidthBasis, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<TextHeightBehavior>, name: textHeightBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextHeightBehavior, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: Text, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:07.995340 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 22:55:09.087461 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:09.088754 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 22:55:10.113537 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:10.113968 >>> {command: get_diagnostics_tree, finderType: ByType, type: TopAlbumPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:55:10.152748 <<< {isError: false, response: {description: TopAlbumPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: TopAlbumPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#2eef7], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TopAlbumPageState#d27d5, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TopAlbumPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:10.153412 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 22:55:10.163348 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:10.169311 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:55:10.218508 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:10.219002 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:55:10.367098 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:10.368616 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:55:10.937003 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:10.937623 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:55:11.012367 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:11.015327 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumDetailsPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:55:11.413292 <<< {isError: false, response: {description: AlbumDetailsPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: AlbumDetailsPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [MediaQuery, _InheritedTheme, _LocalizationsScope-[GlobalKey#2eef7], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _AlbumDetailsPageState#8106c, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: AlbumDetailsPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:11.413920 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:55:11.425774 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:11.429550 >>> {command: tap, finderType: PageBack}
2023-03-06 22:55:11.470345 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:11.471015 >>> {command: waitForAbsent, finderType: ByType, type: AlbumDetailsPage}
2023-03-06 22:55:11.904382 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:11.905226 >>> {command: get_diagnostics_tree, finderType: ByType, type: TopAlbumPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:55:11.919227 <<< {isError: false, response: {description: TopAlbumPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: TopAlbumPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#2eef7], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TopAlbumPageState#d27d5, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TopAlbumPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:11.920765 >>> {command: tap, finderType: PageBack}
2023-03-06 22:55:11.972058 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:11.973138 >>> {command: waitForAbsent, finderType: ByType, type: TopAlbumPage}
2023-03-06 22:55:13.087336 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:13.087800 >>> {command: get_diagnostics_tree, finderType: ByType, type: SearchPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:55:14.106040 <<< {isError: false, response: {description: SearchPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: SearchPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#2eef7]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _SearchPageState#775e3, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: SearchPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:14.110515 >>> {command: tap, finderType: PageBack}
2023-03-06 22:55:15.160923 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:15.161538 >>> {command: waitForAbsent, finderType: ByType, type: SearchPage}
2023-03-06 22:55:15.565296 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:15.565714 >>> {command: get_diagnostics_tree, finderType: ByType, type: HomePage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:55:15.569594 <<< {isError: false, response: {description: HomePage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 119, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 119}, {description: HomePage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#2eef7]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _HomePageState#6e589, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: HomePage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:15.570201 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 22:55:15.575610 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:15.576252 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 22:55:15.582482 <<< {isError: false, response: {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 168, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 168}, {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: [<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#2eef7]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: AlbumsWidget, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:15.583949 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:55:15.590557 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 22:55:15.591433 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 22:55:15.610039 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:52.502279 >>> {command: get_health}
2023-03-06 23:08:52.587686 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:52.590867 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 23:08:54.210644 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:54.219838 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 23:08:54.293648 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:54.302004 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 23:08:54.308788 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:54.309269 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 23:08:54.312748 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:54.315208 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 23:08:54.423325 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:54.424860 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 23:08:54.850569 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:54.852287 >>> {command: get_diagnostics_tree, finderType: ByType, type: SearchPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:08:54.879417 <<< {isError: false, response: {description: SearchPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: SearchPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#d3449]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _SearchPageState#fe291, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: SearchPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:54.881261 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 23:08:54.887478 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:54.887964 >>> {command: get_diagnostics_tree, finderType: ByType, type: TextField, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:08:54.954135 <<< {isError: false, response: {description: TextField, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 174, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 174}, {description: TextField, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: TextEditingController#7239f(TextEditingValue(text: ┤├, selection: TextSelection.invalid, composing: TextRange(start: -1, end: -1))), type: DiagnosticsProperty<TextEditingController>, name: controller, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextEditingController, defaultLevel: info}, {description: null, type: DiagnosticsProperty<FocusNode>, name: focusNode, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FocusNode, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<bool>, name: enabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null}, {description: InputDecoration(hintText: "Search for albums", focusedBorder: UnderlineInputBorder(), enabledBorder: UnderlineInputBorder()), type: DiagnosticsProperty<InputDecoration>, name: decoration, style: singleLine, allowNameWrap: true, properties: [], defaultValue: InputDecoration(), missingIfNull: false, propertyType: InputDecoration, defaultLevel: info}, {description: TextInputType(name: TextInputType.text, signed: null, decimal: null), type: DiagnosticsProperty<TextInputType>, name: keyboardType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextInputType(name: TextInputType.text, signed: null, decimal: null), missingIfNull: false, propertyType: TextInputType, defaultLevel: info}, {description: TextStyle(debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none), type: DiagnosticsProperty<TextStyle>, name: style, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextStyle, defaultLevel: info, isDiagnosticableValue: true}, {description: false, type: DiagnosticsProperty<bool>, name: autofocus, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: •, type: DiagnosticsProperty<String>, name: obscuringCharacter, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: •, missingIfNull: false, propertyType: String, defaultLevel: info, value: •}, {description: false, type: DiagnosticsProperty<bool>, name: obscureText, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: true, type: DiagnosticsProperty<bool>, name: autocorrect, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: enabled, type: EnumProperty<SmartDashesType>, name: smartDashesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartDashesType.enabled, missingIfNull: false, propertyType: SmartDashesType, defaultLevel: info}, {description: enabled, type: EnumProperty<SmartQuotesType>, name: smartQuotesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartQuotesType.enabled, missingIfNull: false, propertyType: SmartQuotesType, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: enableSuggestions, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: 1, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 1, missingIfNull: false, propertyType: int, defaultLevel: info, value: 1, numberToString: 1}, {description: null, type: IntProperty, name: minLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: false, type: DiagnosticsProperty<bool>, name: expands, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: null, type: IntProperty, name: maxLength, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<MaxLengthEnforcement>, name: maxLengthEnforcement, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: MaxLengthEnforcement, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextInputAction>, name: textInputAction, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextInputAction, defaultLevel: info, value: null}, {description: none, type: EnumProperty<TextCapitalization>, name: textCapitalization, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextCapitalization.none, missingIfNull: false, propertyType: TextCapitalization, defaultLevel: info}, {description: start, type: EnumProperty<TextAlign>, name: textAlign, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextAlign.start, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: DiagnosticsProperty<TextAlignVertical>, name: textAlignVertical, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlignVertical, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: 2.0, type: DoubleProperty, name: cursorWidth, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 2.0, missingIfNull: false, propertyType: double, defaultLevel: info, value: 2.0, numberToString: 2.0}, {description: null, type: DoubleProperty, name: cursorHeight, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DiagnosticsProperty<Radius>, name: cursorRadius, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Radius, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: cursorColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Brightness>, name: keyboardAppearance, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Brightness, defaultLevel: info, value: null}, {description: EdgeInsets.all(20.0), type: DiagnosticsProperty<EdgeInsetsGeometry>, name: scrollPadding, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: EdgeInsets.all(20.0), missingIfNull: false, propertyType: EdgeInsetsGeometry, defaultLevel: info}, {description: true, type: FlagProperty, name: selectionEnabled, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true, ifFalse: selection disabled}, {description: null, type: DiagnosticsProperty<TextSelectionControls>, name: selectionControls, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextSelectionControls, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollController>, name: scrollController, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollController, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollPhysics>, name: scrollPhysics, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollPhysics, defaultLevel: info, value: null}, {description: Clip.hardEdge, type: DiagnosticsProperty<Clip>, name: clipBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: Clip.hardEdge, missingIfNull: false, propertyType: Clip, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: scribbleEnabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: true, type: DiagnosticsProperty<bool>, name: enableIMEPersonalizedLearning, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: null, type: DiagnosticsProperty<SpellCheckConfiguration>, name: spellCheckConfiguration, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: SpellCheckConfiguration, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, MediaQuery, UnmanagedRestorationScope, _InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#d3449]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TextFieldState#abfff, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TextField, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:54.959772 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 23:08:55.095598 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:55.097246 >>> {command: enter_text, text: }
2023-03-06 23:08:55.249055 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:55.249586 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 23:08:56.191073 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:56.192015 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 23:08:57.225662 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:57.228626 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 23:08:58.319074 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:58.320121 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 23:08:58.335769 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:58.336442 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 23:08:59.373010 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:08:59.374054 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 23:09:00.406773 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:00.407654 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 23:09:01.436320 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:01.437653 >>> {command: get_diagnostics_tree, finderType: ByText, text: Sun Yan-Zi, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:09:02.489059 <<< {isError: false, response: {description: Text, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 192, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 192}, {description: Text, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: "Sun Yan-Zi", type: StringProperty, name: data, showName: false, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: String, defaultLevel: info, value: Sun Yan-Zi, quoted: true}, {description: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, type: MessageProperty, name: debugLabel, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: false, type: DiagnosticsProperty<bool>, name: inherit, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: Color(0xffc4a35a), type: ColorProperty, name: color, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, valueProperties: {red: 196, green: 163, blue: 90, alpha: 255}}, {description: null, type: ColorProperty, name: backgroundColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: .SF UI Text, type: StringProperty, name: family, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: String, defaultLevel: info, value: .SF UI Text, quoted: false}, {description: null, type: IterableProperty<String>, name: familyFallback, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, ifEmpty: [], missingIfNull: false, propertyType: Iterable<String>, defaultLevel: info, value: null}, {description: 22.0, type: DoubleProperty, name: size, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: 22.0, numberToString: 22.0}, {description: 700, type: DiagnosticsProperty<FontWeight>, name: weight, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontWeight, defaultLevel: info}, {description: null, type: EnumProperty<FontStyle>, name: style, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontStyle, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: letterSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DoubleProperty, name: wordSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: alphabetic, type: EnumProperty<TextBaseline>, name: baseline, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextBaseline, defaultLevel: info}, {description: null, type: DoubleProperty, name: height, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: null, type: EnumProperty<TextLeadingDistribution>, name: leadingDistribution, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextLeadingDistribution, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: foreground, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: background, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: decorationColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: fine, value: null}, {description: TextDecoration.none, type: DiagnosticsProperty<TextDecoration>, name: decoration, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDecoration, defaultLevel: hidden}, {description: TextDecoration.none, type: MessageProperty, name: decoration, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: decorationThickness, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: center, type: EnumProperty<TextAlign>, name: textAlign, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: FlagProperty, name: softWrap, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null, ifTrue: wrapping at box width, ifFalse: no wrapping except at line break characters}, {description: null, type: EnumProperty<TextOverflow>, name: overflow, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextOverflow, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: textScaleFactor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<TextWidthBasis>, name: textWidthBasis, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextWidthBasis, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<TextHeightBehavior>, name: textHeightBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextHeightBehavior, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: Text, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:02.492380 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 23:09:03.596598 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:03.598411 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 23:09:04.550116 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:04.550897 >>> {command: get_diagnostics_tree, finderType: ByType, type: TopAlbumPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:09:04.577609 <<< {isError: false, response: {description: TopAlbumPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: TopAlbumPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#d3449], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TopAlbumPageState#12173, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TopAlbumPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:04.578359 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 23:09:04.586974 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:04.590281 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:09:04.621219 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:04.621939 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:09:04.678446 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:04.679858 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:09:05.135301 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:05.136053 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:09:05.220139 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:05.220817 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumDetailsPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:09:05.630467 <<< {isError: false, response: {description: AlbumDetailsPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: AlbumDetailsPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [MediaQuery, _InheritedTheme, _LocalizationsScope-[GlobalKey#d3449], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _AlbumDetailsPageState#3cdf6, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: AlbumDetailsPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:05.631420 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 23:09:05.645294 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:05.647618 >>> {command: tap, finderType: PageBack}
2023-03-06 23:09:05.694183 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:05.694891 >>> {command: waitForAbsent, finderType: ByType, type: AlbumDetailsPage}
2023-03-06 23:09:07.278769 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:07.279697 >>> {command: get_diagnostics_tree, finderType: ByType, type: TopAlbumPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:09:07.304352 <<< {isError: false, response: {description: TopAlbumPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: TopAlbumPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#d3449], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TopAlbumPageState#12173, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TopAlbumPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:07.306720 >>> {command: tap, finderType: PageBack}
2023-03-06 23:09:07.365020 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:07.366348 >>> {command: waitForAbsent, finderType: ByType, type: TopAlbumPage}
2023-03-06 23:09:08.490452 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:08.491757 >>> {command: get_diagnostics_tree, finderType: ByType, type: SearchPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:09:09.528573 <<< {isError: false, response: {description: SearchPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: SearchPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#d3449]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _SearchPageState#fe291, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: SearchPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:09.530893 >>> {command: tap, finderType: PageBack}
2023-03-06 23:09:10.611539 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:10.612491 >>> {command: waitForAbsent, finderType: ByType, type: SearchPage}
2023-03-06 23:09:11.021588 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:11.022373 >>> {command: get_diagnostics_tree, finderType: ByType, type: HomePage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:09:11.033019 <<< {isError: false, response: {description: HomePage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 119, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 119}, {description: HomePage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#d3449]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _HomePageState#247b4, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: HomePage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:11.033600 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 23:09:11.037810 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:11.038369 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:09:11.043220 <<< {isError: false, response: {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 168, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 168}, {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: [<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#d3449]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: AlbumsWidget, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:11.044815 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:09:11.052586 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:09:11.053102 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:09:11.089477 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:15:58.193235 >>> {command: get_health}
2023-03-06 23:15:58.294054 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:15:58.296871 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 23:16:00.042672 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:00.050935 >>> {command: get_health}
2023-03-06 23:16:00.111124 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:00.112644 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 23:16:00.132188 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:00.137261 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 23:16:00.142475 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:00.142810 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 23:16:00.144661 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:00.146491 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 23:16:00.262861 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:00.263797 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 23:16:00.725092 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:00.726694 >>> {command: get_diagnostics_tree, finderType: ByType, type: SearchPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:16:00.754773 <<< {isError: false, response: {description: SearchPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: SearchPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#a4a3e]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _SearchPageState#22947, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: SearchPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:00.757592 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 23:16:00.763549 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:00.763967 >>> {command: get_diagnostics_tree, finderType: ByType, type: TextField, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:16:00.828901 <<< {isError: false, response: {description: TextField, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 174, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 174}, {description: TextField, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: TextEditingController#83aae(TextEditingValue(text: ┤├, selection: TextSelection.invalid, composing: TextRange(start: -1, end: -1))), type: DiagnosticsProperty<TextEditingController>, name: controller, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextEditingController, defaultLevel: info}, {description: null, type: DiagnosticsProperty<FocusNode>, name: focusNode, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FocusNode, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<bool>, name: enabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null}, {description: InputDecoration(hintText: "Search for albums", focusedBorder: UnderlineInputBorder(), enabledBorder: UnderlineInputBorder()), type: DiagnosticsProperty<InputDecoration>, name: decoration, style: singleLine, allowNameWrap: true, properties: [], defaultValue: InputDecoration(), missingIfNull: false, propertyType: InputDecoration, defaultLevel: info}, {description: TextInputType(name: TextInputType.text, signed: null, decimal: null), type: DiagnosticsProperty<TextInputType>, name: keyboardType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextInputType(name: TextInputType.text, signed: null, decimal: null), missingIfNull: false, propertyType: TextInputType, defaultLevel: info}, {description: TextStyle(debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none), type: DiagnosticsProperty<TextStyle>, name: style, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextStyle, defaultLevel: info, isDiagnosticableValue: true}, {description: false, type: DiagnosticsProperty<bool>, name: autofocus, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: •, type: DiagnosticsProperty<String>, name: obscuringCharacter, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: •, missingIfNull: false, propertyType: String, defaultLevel: info, value: •}, {description: false, type: DiagnosticsProperty<bool>, name: obscureText, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: true, type: DiagnosticsProperty<bool>, name: autocorrect, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: enabled, type: EnumProperty<SmartDashesType>, name: smartDashesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartDashesType.enabled, missingIfNull: false, propertyType: SmartDashesType, defaultLevel: info}, {description: enabled, type: EnumProperty<SmartQuotesType>, name: smartQuotesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartQuotesType.enabled, missingIfNull: false, propertyType: SmartQuotesType, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: enableSuggestions, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: 1, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 1, missingIfNull: false, propertyType: int, defaultLevel: info, value: 1, numberToString: 1}, {description: null, type: IntProperty, name: minLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: false, type: DiagnosticsProperty<bool>, name: expands, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: null, type: IntProperty, name: maxLength, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<MaxLengthEnforcement>, name: maxLengthEnforcement, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: MaxLengthEnforcement, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextInputAction>, name: textInputAction, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextInputAction, defaultLevel: info, value: null}, {description: none, type: EnumProperty<TextCapitalization>, name: textCapitalization, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextCapitalization.none, missingIfNull: false, propertyType: TextCapitalization, defaultLevel: info}, {description: start, type: EnumProperty<TextAlign>, name: textAlign, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextAlign.start, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: DiagnosticsProperty<TextAlignVertical>, name: textAlignVertical, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlignVertical, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: 2.0, type: DoubleProperty, name: cursorWidth, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 2.0, missingIfNull: false, propertyType: double, defaultLevel: info, value: 2.0, numberToString: 2.0}, {description: null, type: DoubleProperty, name: cursorHeight, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DiagnosticsProperty<Radius>, name: cursorRadius, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Radius, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: cursorColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Brightness>, name: keyboardAppearance, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Brightness, defaultLevel: info, value: null}, {description: EdgeInsets.all(20.0), type: DiagnosticsProperty<EdgeInsetsGeometry>, name: scrollPadding, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: EdgeInsets.all(20.0), missingIfNull: false, propertyType: EdgeInsetsGeometry, defaultLevel: info}, {description: true, type: FlagProperty, name: selectionEnabled, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true, ifFalse: selection disabled}, {description: null, type: DiagnosticsProperty<TextSelectionControls>, name: selectionControls, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextSelectionControls, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollController>, name: scrollController, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollController, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollPhysics>, name: scrollPhysics, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollPhysics, defaultLevel: info, value: null}, {description: Clip.hardEdge, type: DiagnosticsProperty<Clip>, name: clipBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: Clip.hardEdge, missingIfNull: false, propertyType: Clip, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: scribbleEnabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: true, type: DiagnosticsProperty<bool>, name: enableIMEPersonalizedLearning, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: null, type: DiagnosticsProperty<SpellCheckConfiguration>, name: spellCheckConfiguration, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: SpellCheckConfiguration, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, MediaQuery, UnmanagedRestorationScope, _InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#a4a3e]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TextFieldState#a8899, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TextField, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:00.833982 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 23:16:00.981573 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:00.982796 >>> {command: enter_text, text: }
2023-03-06 23:16:01.133598 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:01.134164 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 23:16:02.078404 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:02.079873 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 23:16:03.136134 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:03.139303 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 23:16:04.200240 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:04.201045 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 23:16:04.216248 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:04.216889 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 23:16:05.235874 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:05.236519 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 23:16:06.236867 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:06.237613 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 23:16:07.260465 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:07.261015 >>> {command: get_diagnostics_tree, finderType: ByText, text: Sun Yan-Zi, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:16:08.303501 <<< {isError: false, response: {description: Text, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 192, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 192}, {description: Text, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: "Sun Yan-Zi", type: StringProperty, name: data, showName: false, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: String, defaultLevel: info, value: Sun Yan-Zi, quoted: true}, {description: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, type: MessageProperty, name: debugLabel, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: false, type: DiagnosticsProperty<bool>, name: inherit, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: Color(0xffc4a35a), type: ColorProperty, name: color, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, valueProperties: {red: 196, green: 163, blue: 90, alpha: 255}}, {description: null, type: ColorProperty, name: backgroundColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: .SF UI Text, type: StringProperty, name: family, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: String, defaultLevel: info, value: .SF UI Text, quoted: false}, {description: null, type: IterableProperty<String>, name: familyFallback, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, ifEmpty: [], missingIfNull: false, propertyType: Iterable<String>, defaultLevel: info, value: null}, {description: 22.0, type: DoubleProperty, name: size, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: 22.0, numberToString: 22.0}, {description: 700, type: DiagnosticsProperty<FontWeight>, name: weight, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontWeight, defaultLevel: info}, {description: null, type: EnumProperty<FontStyle>, name: style, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontStyle, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: letterSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DoubleProperty, name: wordSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: alphabetic, type: EnumProperty<TextBaseline>, name: baseline, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextBaseline, defaultLevel: info}, {description: null, type: DoubleProperty, name: height, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: null, type: EnumProperty<TextLeadingDistribution>, name: leadingDistribution, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextLeadingDistribution, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: foreground, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: background, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: decorationColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: fine, value: null}, {description: TextDecoration.none, type: DiagnosticsProperty<TextDecoration>, name: decoration, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDecoration, defaultLevel: hidden}, {description: TextDecoration.none, type: MessageProperty, name: decoration, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: decorationThickness, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: center, type: EnumProperty<TextAlign>, name: textAlign, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: FlagProperty, name: softWrap, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null, ifTrue: wrapping at box width, ifFalse: no wrapping except at line break characters}, {description: null, type: EnumProperty<TextOverflow>, name: overflow, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextOverflow, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: textScaleFactor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<TextWidthBasis>, name: textWidthBasis, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextWidthBasis, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<TextHeightBehavior>, name: textHeightBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextHeightBehavior, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: Text, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:08.307398 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 23:16:09.408335 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:09.409286 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 23:16:10.251801 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:10.252335 >>> {command: get_diagnostics_tree, finderType: ByType, type: TopAlbumPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:16:10.285130 <<< {isError: false, response: {description: TopAlbumPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: TopAlbumPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#a4a3e], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TopAlbumPageState#86933, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TopAlbumPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:10.285627 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 23:16:10.293358 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:10.296342 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:16:10.315809 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:10.316488 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:16:10.378881 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:10.381156 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:16:10.909048 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:10.909568 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:16:10.972939 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:10.973633 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumDetailsPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:16:11.428814 <<< {isError: false, response: {description: AlbumDetailsPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: AlbumDetailsPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [MediaQuery, _InheritedTheme, _LocalizationsScope-[GlobalKey#a4a3e], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _AlbumDetailsPageState#8daa0, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: AlbumDetailsPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:11.429479 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 23:16:11.437177 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:11.438644 >>> {command: tap, finderType: PageBack}
2023-03-06 23:16:11.479209 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:11.479666 >>> {command: waitForAbsent, finderType: ByType, type: AlbumDetailsPage}
2023-03-06 23:16:12.960142 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:12.961428 >>> {command: get_diagnostics_tree, finderType: ByType, type: TopAlbumPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:16:12.981183 <<< {isError: false, response: {description: TopAlbumPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: TopAlbumPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#a4a3e], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TopAlbumPageState#86933, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TopAlbumPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:12.983112 >>> {command: tap, finderType: PageBack}
2023-03-06 23:16:13.038375 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:13.038797 >>> {command: waitForAbsent, finderType: ByType, type: TopAlbumPage}
2023-03-06 23:16:14.204441 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:14.205193 >>> {command: get_diagnostics_tree, finderType: ByType, type: SearchPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:16:15.242131 <<< {isError: false, response: {description: SearchPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: SearchPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#a4a3e]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _SearchPageState#22947, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: SearchPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:15.243862 >>> {command: tap, finderType: PageBack}
2023-03-06 23:16:16.266248 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:16.267477 >>> {command: waitForAbsent, finderType: ByType, type: SearchPage}
2023-03-06 23:16:16.657055 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:16.657768 >>> {command: get_diagnostics_tree, finderType: ByType, type: HomePage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:16:16.669397 <<< {isError: false, response: {description: HomePage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 119, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 119}, {description: HomePage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#a4a3e]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _HomePageState#0ec0a, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: HomePage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:16.670130 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 23:16:16.674285 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:16.674899 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:16:16.679682 <<< {isError: false, response: {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 168, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 168}, {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: [<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#a4a3e]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: AlbumsWidget, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:16.681742 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:16:16.688700 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:16:16.689215 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:16:16.724940 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:12.759591 >>> {command: get_health}
2023-03-06 23:20:12.856883 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:12.857901 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 23:20:14.492940 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:14.499442 >>> {command: get_health}
2023-03-06 23:20:14.562876 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:14.565305 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 23:20:14.585417 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:14.588986 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 23:20:14.593213 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:14.593374 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 23:20:14.595040 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:14.595780 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 23:20:14.704595 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:14.705921 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 23:20:15.132206 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:15.133875 >>> {command: get_diagnostics_tree, finderType: ByType, type: SearchPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:20:15.159705 <<< {isError: false, response: {description: SearchPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: SearchPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#7388a]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _SearchPageState#545c0, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: SearchPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:15.161074 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 23:20:15.165402 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:15.166027 >>> {command: get_diagnostics_tree, finderType: ByType, type: TextField, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:20:15.220990 <<< {isError: false, response: {description: TextField, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 174, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 174}, {description: TextField, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: TextEditingController#17e89(TextEditingValue(text: ┤├, selection: TextSelection.invalid, composing: TextRange(start: -1, end: -1))), type: DiagnosticsProperty<TextEditingController>, name: controller, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextEditingController, defaultLevel: info}, {description: null, type: DiagnosticsProperty<FocusNode>, name: focusNode, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FocusNode, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<bool>, name: enabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null}, {description: InputDecoration(hintText: "Search for albums", focusedBorder: UnderlineInputBorder(), enabledBorder: UnderlineInputBorder()), type: DiagnosticsProperty<InputDecoration>, name: decoration, style: singleLine, allowNameWrap: true, properties: [], defaultValue: InputDecoration(), missingIfNull: false, propertyType: InputDecoration, defaultLevel: info}, {description: TextInputType(name: TextInputType.text, signed: null, decimal: null), type: DiagnosticsProperty<TextInputType>, name: keyboardType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextInputType(name: TextInputType.text, signed: null, decimal: null), missingIfNull: false, propertyType: TextInputType, defaultLevel: info}, {description: TextStyle(debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none), type: DiagnosticsProperty<TextStyle>, name: style, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextStyle, defaultLevel: info, isDiagnosticableValue: true}, {description: false, type: DiagnosticsProperty<bool>, name: autofocus, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: •, type: DiagnosticsProperty<String>, name: obscuringCharacter, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: •, missingIfNull: false, propertyType: String, defaultLevel: info, value: •}, {description: false, type: DiagnosticsProperty<bool>, name: obscureText, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: true, type: DiagnosticsProperty<bool>, name: autocorrect, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: enabled, type: EnumProperty<SmartDashesType>, name: smartDashesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartDashesType.enabled, missingIfNull: false, propertyType: SmartDashesType, defaultLevel: info}, {description: enabled, type: EnumProperty<SmartQuotesType>, name: smartQuotesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartQuotesType.enabled, missingIfNull: false, propertyType: SmartQuotesType, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: enableSuggestions, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: 1, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 1, missingIfNull: false, propertyType: int, defaultLevel: info, value: 1, numberToString: 1}, {description: null, type: IntProperty, name: minLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: false, type: DiagnosticsProperty<bool>, name: expands, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: null, type: IntProperty, name: maxLength, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<MaxLengthEnforcement>, name: maxLengthEnforcement, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: MaxLengthEnforcement, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextInputAction>, name: textInputAction, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextInputAction, defaultLevel: info, value: null}, {description: none, type: EnumProperty<TextCapitalization>, name: textCapitalization, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextCapitalization.none, missingIfNull: false, propertyType: TextCapitalization, defaultLevel: info}, {description: start, type: EnumProperty<TextAlign>, name: textAlign, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextAlign.start, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: DiagnosticsProperty<TextAlignVertical>, name: textAlignVertical, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlignVertical, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: 2.0, type: DoubleProperty, name: cursorWidth, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 2.0, missingIfNull: false, propertyType: double, defaultLevel: info, value: 2.0, numberToString: 2.0}, {description: null, type: DoubleProperty, name: cursorHeight, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DiagnosticsProperty<Radius>, name: cursorRadius, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Radius, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: cursorColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Brightness>, name: keyboardAppearance, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Brightness, defaultLevel: info, value: null}, {description: EdgeInsets.all(20.0), type: DiagnosticsProperty<EdgeInsetsGeometry>, name: scrollPadding, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: EdgeInsets.all(20.0), missingIfNull: false, propertyType: EdgeInsetsGeometry, defaultLevel: info}, {description: true, type: FlagProperty, name: selectionEnabled, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true, ifFalse: selection disabled}, {description: null, type: DiagnosticsProperty<TextSelectionControls>, name: selectionControls, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextSelectionControls, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollController>, name: scrollController, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollController, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollPhysics>, name: scrollPhysics, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollPhysics, defaultLevel: info, value: null}, {description: Clip.hardEdge, type: DiagnosticsProperty<Clip>, name: clipBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: Clip.hardEdge, missingIfNull: false, propertyType: Clip, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: scribbleEnabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: true, type: DiagnosticsProperty<bool>, name: enableIMEPersonalizedLearning, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: null, type: DiagnosticsProperty<SpellCheckConfiguration>, name: spellCheckConfiguration, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: SpellCheckConfiguration, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, MediaQuery, UnmanagedRestorationScope, _InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#7388a]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TextFieldState#dce30, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TextField, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:15.223039 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 23:20:15.377655 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:15.378924 >>> {command: enter_text, text: }
2023-03-06 23:20:15.542299 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:15.542705 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 23:20:16.481809 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:16.482734 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 23:20:17.537754 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:17.540183 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 23:20:18.628805 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:18.629305 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 23:20:18.644252 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:18.644631 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 23:20:19.669881 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:19.671456 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 23:20:20.687969 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:20.688679 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 23:20:21.717351 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:21.718452 >>> {command: get_diagnostics_tree, finderType: ByText, text: Sun Yan-Zi, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:20:22.761697 <<< {isError: false, response: {description: Text, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 192, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 192}, {description: Text, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: "Sun Yan-Zi", type: StringProperty, name: data, showName: false, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: String, defaultLevel: info, value: Sun Yan-Zi, quoted: true}, {description: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, type: MessageProperty, name: debugLabel, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: false, type: DiagnosticsProperty<bool>, name: inherit, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: Color(0xffc4a35a), type: ColorProperty, name: color, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, valueProperties: {red: 196, green: 163, blue: 90, alpha: 255}}, {description: null, type: ColorProperty, name: backgroundColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: .SF UI Text, type: StringProperty, name: family, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: String, defaultLevel: info, value: .SF UI Text, quoted: false}, {description: null, type: IterableProperty<String>, name: familyFallback, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, ifEmpty: [], missingIfNull: false, propertyType: Iterable<String>, defaultLevel: info, value: null}, {description: 22.0, type: DoubleProperty, name: size, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: 22.0, numberToString: 22.0}, {description: 700, type: DiagnosticsProperty<FontWeight>, name: weight, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontWeight, defaultLevel: info}, {description: null, type: EnumProperty<FontStyle>, name: style, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontStyle, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: letterSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DoubleProperty, name: wordSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: alphabetic, type: EnumProperty<TextBaseline>, name: baseline, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextBaseline, defaultLevel: info}, {description: null, type: DoubleProperty, name: height, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: null, type: EnumProperty<TextLeadingDistribution>, name: leadingDistribution, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextLeadingDistribution, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: foreground, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: background, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: decorationColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: fine, value: null}, {description: TextDecoration.none, type: DiagnosticsProperty<TextDecoration>, name: decoration, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDecoration, defaultLevel: hidden}, {description: TextDecoration.none, type: MessageProperty, name: decoration, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: decorationThickness, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: center, type: EnumProperty<TextAlign>, name: textAlign, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: FlagProperty, name: softWrap, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null, ifTrue: wrapping at box width, ifFalse: no wrapping except at line break characters}, {description: null, type: EnumProperty<TextOverflow>, name: overflow, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextOverflow, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: textScaleFactor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<TextWidthBasis>, name: textWidthBasis, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextWidthBasis, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<TextHeightBehavior>, name: textHeightBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextHeightBehavior, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: Text, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:22.764164 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 23:20:23.862201 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:23.863627 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 23:20:24.748005 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:24.748680 >>> {command: get_diagnostics_tree, finderType: ByType, type: TopAlbumPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:20:24.777309 <<< {isError: false, response: {description: TopAlbumPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: TopAlbumPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#7388a], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TopAlbumPageState#9da86, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TopAlbumPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:24.777889 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 23:20:24.788234 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:24.790357 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:20:24.811225 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:24.811803 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:20:24.874936 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:24.877658 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:20:25.395254 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:25.395741 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:20:25.459102 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:25.459767 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumDetailsPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:20:25.886020 <<< {isError: false, response: {description: AlbumDetailsPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: AlbumDetailsPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [MediaQuery, _InheritedTheme, _LocalizationsScope-[GlobalKey#7388a], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _AlbumDetailsPageState#3b6f5, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: AlbumDetailsPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:25.886965 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 23:20:25.896092 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:25.898633 >>> {command: tap, finderType: PageBack}
2023-03-06 23:20:25.944611 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:25.945029 >>> {command: waitForAbsent, finderType: ByType, type: AlbumDetailsPage}
2023-03-06 23:20:26.319074 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:26.319768 >>> {command: get_diagnostics_tree, finderType: ByType, type: TopAlbumPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:20:26.330194 <<< {isError: false, response: {description: TopAlbumPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: TopAlbumPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#7388a], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TopAlbumPageState#9da86, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TopAlbumPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:26.332386 >>> {command: tap, finderType: PageBack}
2023-03-06 23:20:26.365550 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:26.366233 >>> {command: waitForAbsent, finderType: ByType, type: TopAlbumPage}
2023-03-06 23:20:27.511764 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:27.513026 >>> {command: get_diagnostics_tree, finderType: ByType, type: SearchPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:20:28.550591 <<< {isError: false, response: {description: SearchPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: SearchPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#7388a]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _SearchPageState#545c0, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: SearchPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:28.553243 >>> {command: tap, finderType: PageBack}
2023-03-06 23:20:29.632291 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:29.633262 >>> {command: waitForAbsent, finderType: ByType, type: SearchPage}
2023-03-06 23:20:30.068269 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:30.069144 >>> {command: get_diagnostics_tree, finderType: ByType, type: HomePage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:20:30.079823 <<< {isError: false, response: {description: HomePage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 119, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 119}, {description: HomePage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#7388a]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _HomePageState#cc1a2, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: HomePage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:30.080548 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 23:20:30.084454 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:30.084993 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:20:30.088804 <<< {isError: false, response: {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 168, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 168}, {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: [<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#7388a]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: AlbumsWidget, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:30.090123 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:20:30.095778 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:20:30.096145 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:20:30.133227 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:25.190787 >>> {command: get_health}
2023-03-06 23:21:25.279105 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:25.280223 >>> {command: waitForCondition, conditionName: FirstFrameRasterizedCondition}
2023-03-06 23:21:26.971187 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:26.975492 >>> {command: get_health}
2023-03-06 23:21:27.039459 <<< {isError: false, response: {status: ok}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:27.042731 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 23:21:27.077512 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:27.080549 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 23:21:27.087129 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:27.087382 >>> {command: get_text, finderType: ByText, text: No Albums added yet}
2023-03-06 23:21:27.090526 <<< {isError: false, response: {text: No Albums added yet}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:27.091542 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 23:21:27.201429 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:27.204887 >>> {command: waitFor, finderType: ByText, text: Search for albums}
2023-03-06 23:21:27.633624 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:27.635887 >>> {command: get_diagnostics_tree, finderType: ByType, type: SearchPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:21:27.663073 <<< {isError: false, response: {description: SearchPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: SearchPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#16624]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _SearchPageState#e96ba, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: SearchPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:27.664437 >>> {command: get_text, finderType: ByText, text: Search for albums}
2023-03-06 23:21:27.669647 <<< {isError: false, response: {text: Search for albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:27.670318 >>> {command: get_diagnostics_tree, finderType: ByType, type: TextField, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:21:27.728050 <<< {isError: false, response: {description: TextField, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 174, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 174}, {description: TextField, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: TextEditingController#b9ef2(TextEditingValue(text: ┤├, selection: TextSelection.invalid, composing: TextRange(start: -1, end: -1))), type: DiagnosticsProperty<TextEditingController>, name: controller, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextEditingController, defaultLevel: info}, {description: null, type: DiagnosticsProperty<FocusNode>, name: focusNode, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FocusNode, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<bool>, name: enabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null}, {description: InputDecoration(hintText: "Search for albums", focusedBorder: UnderlineInputBorder(), enabledBorder: UnderlineInputBorder()), type: DiagnosticsProperty<InputDecoration>, name: decoration, style: singleLine, allowNameWrap: true, properties: [], defaultValue: InputDecoration(), missingIfNull: false, propertyType: InputDecoration, defaultLevel: info}, {description: TextInputType(name: TextInputType.text, signed: null, decimal: null), type: DiagnosticsProperty<TextInputType>, name: keyboardType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextInputType(name: TextInputType.text, signed: null, decimal: null), missingIfNull: false, propertyType: TextInputType, defaultLevel: info}, {description: TextStyle(debugLabel: (englishLike bodyLarge 2014).merge((blackCupertino bodyLarge).copyWith), inherit: false, color: Color(0xffffffff), family: .SF UI Text, size: 14.0, weight: 500, baseline: alphabetic, decoration: TextDecoration.none), type: DiagnosticsProperty<TextStyle>, name: style, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextStyle, defaultLevel: info, isDiagnosticableValue: true}, {description: false, type: DiagnosticsProperty<bool>, name: autofocus, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: •, type: DiagnosticsProperty<String>, name: obscuringCharacter, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: •, missingIfNull: false, propertyType: String, defaultLevel: info, value: •}, {description: false, type: DiagnosticsProperty<bool>, name: obscureText, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: true, type: DiagnosticsProperty<bool>, name: autocorrect, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: enabled, type: EnumProperty<SmartDashesType>, name: smartDashesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartDashesType.enabled, missingIfNull: false, propertyType: SmartDashesType, defaultLevel: info}, {description: enabled, type: EnumProperty<SmartQuotesType>, name: smartQuotesType, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: SmartQuotesType.enabled, missingIfNull: false, propertyType: SmartQuotesType, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: enableSuggestions, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: 1, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 1, missingIfNull: false, propertyType: int, defaultLevel: info, value: 1, numberToString: 1}, {description: null, type: IntProperty, name: minLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: false, type: DiagnosticsProperty<bool>, name: expands, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: false, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: null, type: IntProperty, name: maxLength, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<MaxLengthEnforcement>, name: maxLengthEnforcement, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: MaxLengthEnforcement, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextInputAction>, name: textInputAction, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextInputAction, defaultLevel: info, value: null}, {description: none, type: EnumProperty<TextCapitalization>, name: textCapitalization, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextCapitalization.none, missingIfNull: false, propertyType: TextCapitalization, defaultLevel: info}, {description: start, type: EnumProperty<TextAlign>, name: textAlign, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: TextAlign.start, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: DiagnosticsProperty<TextAlignVertical>, name: textAlignVertical, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlignVertical, defaultLevel: info, value: null}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: 2.0, type: DoubleProperty, name: cursorWidth, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: 2.0, missingIfNull: false, propertyType: double, defaultLevel: info, value: 2.0, numberToString: 2.0}, {description: null, type: DoubleProperty, name: cursorHeight, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DiagnosticsProperty<Radius>, name: cursorRadius, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Radius, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: cursorColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Brightness>, name: keyboardAppearance, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Brightness, defaultLevel: info, value: null}, {description: EdgeInsets.all(20.0), type: DiagnosticsProperty<EdgeInsetsGeometry>, name: scrollPadding, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: EdgeInsets.all(20.0), missingIfNull: false, propertyType: EdgeInsetsGeometry, defaultLevel: info}, {description: true, type: FlagProperty, name: selectionEnabled, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true, ifFalse: selection disabled}, {description: null, type: DiagnosticsProperty<TextSelectionControls>, name: selectionControls, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextSelectionControls, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollController>, name: scrollController, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollController, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<ScrollPhysics>, name: scrollPhysics, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: ScrollPhysics, defaultLevel: info, value: null}, {description: Clip.hardEdge, type: DiagnosticsProperty<Clip>, name: clipBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: Clip.hardEdge, missingIfNull: false, propertyType: Clip, defaultLevel: info}, {description: true, type: DiagnosticsProperty<bool>, name: scribbleEnabled, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: true, type: DiagnosticsProperty<bool>, name: enableIMEPersonalizedLearning, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: true, missingIfNull: false, propertyType: bool, defaultLevel: info, value: true}, {description: null, type: DiagnosticsProperty<SpellCheckConfiguration>, name: spellCheckConfiguration, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: SpellCheckConfiguration, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, MediaQuery, UnmanagedRestorationScope, _InheritedCupertinoTheme, _InheritedTheme, _LocalizationsScope-[GlobalKey#16624]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TextFieldState#dc93d, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TextField, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:27.730467 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 23:21:27.877677 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:27.879742 >>> {command: enter_text, text: }
2023-03-06 23:21:28.032231 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:28.032947 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 23:21:28.976711 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:28.978931 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 23:21:29.986490 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:29.990124 >>> {command: tap, finderType: ByType, type: TextField}
2023-03-06 23:21:31.085193 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:31.086116 >>> {command: enter_text, text: Yan-Zi Sun}
2023-03-06 23:21:31.102812 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:31.103517 >>> {command: tap, finderType: ByType, type: AppbarSearchButton}
2023-03-06 23:21:32.151410 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:32.152304 >>> {command: waitForCondition, conditionName: NoTransientCallbacksCondition}
2023-03-06 23:21:33.170238 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:33.171612 >>> {command: waitFor, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 23:21:34.199765 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:34.200718 >>> {command: get_diagnostics_tree, finderType: ByText, text: Sun Yan-Zi, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:21:35.251496 <<< {isError: false, response: {description: Text, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 192, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 192}, {description: Text, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: "Sun Yan-Zi", type: StringProperty, name: data, showName: false, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: String, defaultLevel: info, value: Sun Yan-Zi, quoted: true}, {description: ((englishLike bodyMedium 2014).merge((blackCupertino bodyMedium).copyWith)).copyWith, type: MessageProperty, name: debugLabel, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: false, type: DiagnosticsProperty<bool>, name: inherit, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: bool, defaultLevel: info, value: false}, {description: Color(0xffc4a35a), type: ColorProperty, name: color, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, valueProperties: {red: 196, green: 163, blue: 90, alpha: 255}}, {description: null, type: ColorProperty, name: backgroundColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: info, value: null}, {description: .SF UI Text, type: StringProperty, name: family, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: String, defaultLevel: info, value: .SF UI Text, quoted: false}, {description: null, type: IterableProperty<String>, name: familyFallback, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, ifEmpty: [], missingIfNull: false, propertyType: Iterable<String>, defaultLevel: info, value: null}, {description: 22.0, type: DoubleProperty, name: size, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: 22.0, numberToString: 22.0}, {description: 700, type: DiagnosticsProperty<FontWeight>, name: weight, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontWeight, defaultLevel: info}, {description: null, type: EnumProperty<FontStyle>, name: style, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: FontStyle, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: letterSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: DoubleProperty, name: wordSpacing, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: alphabetic, type: EnumProperty<TextBaseline>, name: baseline, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextBaseline, defaultLevel: info}, {description: null, type: DoubleProperty, name: height, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: null, type: EnumProperty<TextLeadingDistribution>, name: leadingDistribution, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextLeadingDistribution, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: foreground, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Paint>, name: background, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Paint, defaultLevel: info, value: null}, {description: null, type: ColorProperty, name: decorationColor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Color, defaultLevel: fine, value: null}, {description: TextDecoration.none, type: DiagnosticsProperty<TextDecoration>, name: decoration, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDecoration, defaultLevel: hidden}, {description: TextDecoration.none, type: MessageProperty, name: decoration, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: void, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: decorationThickness, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, unit: x, numberToString: null}, {description: center, type: EnumProperty<TextAlign>, name: textAlign, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextAlign, defaultLevel: info}, {description: null, type: EnumProperty<TextDirection>, name: textDirection, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextDirection, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<Locale>, name: locale, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Locale, defaultLevel: info, value: null}, {description: null, type: FlagProperty, name: softWrap, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: null, ifTrue: wrapping at box width, ifFalse: no wrapping except at line break characters}, {description: null, type: EnumProperty<TextOverflow>, name: overflow, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextOverflow, defaultLevel: info, value: null}, {description: null, type: DoubleProperty, name: textScaleFactor, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: double, defaultLevel: info, value: null, numberToString: null}, {description: null, type: IntProperty, name: maxLines, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: int, defaultLevel: info, value: null, numberToString: null}, {description: null, type: EnumProperty<TextWidthBasis>, name: textWidthBasis, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextWidthBasis, defaultLevel: info, value: null}, {description: null, type: DiagnosticsProperty<TextHeightBehavior>, name: textHeightBehavior, level: fine, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: TextHeightBehavior, defaultLevel: info, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [DefaultSelectionStyle, DefaultTextStyle, MediaQuery], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: Text, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:35.255777 >>> {command: tap, finderType: ByText, text: Sun Yan-Zi}
2023-03-06 23:21:36.344007 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:36.345834 >>> {command: waitForAbsent, finderType: ByText, text: Yan-Zi Sun}
2023-03-06 23:21:37.164717 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:37.165451 >>> {command: get_diagnostics_tree, finderType: ByType, type: TopAlbumPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:21:37.193562 <<< {isError: false, response: {description: TopAlbumPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: TopAlbumPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#16624], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TopAlbumPageState#2ff32, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TopAlbumPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:37.194099 >>> {command: get_text, finderType: ByText, text: Sun Yan-Zi Top Albums}
2023-03-06 23:21:37.204419 <<< {isError: false, response: {text: Sun Yan-Zi Top Albums}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:37.207114 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:21:37.240193 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:37.240940 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:21:37.299797 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:37.302733 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:21:37.749049 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:37.749975 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByText","text":"The moment"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:21:37.817013 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:37.817897 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumDetailsPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:21:38.250752 <<< {isError: false, response: {description: AlbumDetailsPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: AlbumDetailsPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [MediaQuery, _InheritedTheme, _LocalizationsScope-[GlobalKey#16624], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _AlbumDetailsPageState#dd670, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: AlbumDetailsPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:38.251688 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 23:21:38.259046 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:38.260702 >>> {command: tap, finderType: PageBack}
2023-03-06 23:21:38.304824 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:38.305102 >>> {command: waitForAbsent, finderType: ByType, type: AlbumDetailsPage}
2023-03-06 23:21:39.674294 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:39.675267 >>> {command: get_diagnostics_tree, finderType: ByType, type: TopAlbumPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:21:39.695522 <<< {isError: false, response: {description: TopAlbumPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: TopAlbumPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#16624], _ModalScopeStatus], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _TopAlbumPageState#2ff32, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: TopAlbumPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:39.697523 >>> {command: tap, finderType: PageBack}
2023-03-06 23:21:39.742260 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:39.742492 >>> {command: waitForAbsent, finderType: ByType, type: TopAlbumPage}
2023-03-06 23:21:40.878876 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:40.880490 >>> {command: get_diagnostics_tree, finderType: ByType, type: SearchPage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:21:41.907453 <<< {isError: false, response: {description: SearchPage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 122, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 122}, {description: SearchPage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#16624]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _SearchPageState#e96ba, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: SearchPage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:41.910868 >>> {command: tap, finderType: PageBack}
2023-03-06 23:21:42.988992 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:42.989695 >>> {command: waitForAbsent, finderType: ByType, type: SearchPage}
2023-03-06 23:21:43.363130 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:43.364100 >>> {command: get_diagnostics_tree, finderType: ByType, type: HomePage, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:21:43.369480 <<< {isError: false, response: {description: HomePage, type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 119, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 119}, {description: HomePage, type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: null, type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden, value: null}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#16624]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}, {description: _HomePageState#c51cc, type: DiagnosticsProperty<State<StatefulWidget>>, name: state, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: State<StatefulWidget>, defaultLevel: info, isDiagnosticableValue: true}], widgetRuntimeType: HomePage, stateful: true}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:43.370230 >>> {command: get_text, finderType: ByText, text: Music App}
2023-03-06 23:21:43.374335 <<< {isError: false, response: {text: Music App}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:43.374751 >>> {command: get_diagnostics_tree, finderType: ByType, type: AlbumsWidget, subtreeDepth: 0, includeProperties: true, diagnosticsType: widget}
2023-03-06 23:21:43.378484 <<< {isError: false, response: {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: _ElementDiagnosticableTreeNode, style: dense, hasChildren: true, allowWrap: false, properties: [{description: 168, type: ObjectFlagProperty<int>, name: depth, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no depth, missingIfNull: false, propertyType: int, defaultLevel: info, value: 168}, {description: AlbumsWidget-[<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: ObjectFlagProperty<Widget>, name: widget, level: hidden, style: singleLine, allowNameWrap: true, properties: [], ifNull: no widget, missingIfNull: false, propertyType: Widget, defaultLevel: info, isDiagnosticableValue: true}, {description: [<'c0e94015-ae60-3847-8dd1-74ebcd9db940true'>], type: DiagnosticsProperty<Key>, name: key, level: hidden, showName: false, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: Key, defaultLevel: hidden}, {description: false, type: FlagProperty, name: dirty, level: hidden, style: singleLine, allowNameWrap: true, properties: [], defaultValue: null, missingIfNull: false, propertyType: bool, defaultLevel: info, value: false, ifTrue: dirty}, {description: [_InheritedTheme, _LocalizationsScope-[GlobalKey#16624]], type: DiagnosticsProperty<List<DiagnosticsNode>>, name: dependencies, style: singleLine, allowNameWrap: true, properties: [], missingIfNull: false, propertyType: List<DiagnosticsNode>, defaultLevel: info}], widgetRuntimeType: AlbumsWidget, stateful: false}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:43.379096 >>> {command: waitFor, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:21:43.382950 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
2023-03-06 23:21:43.383128 >>> {command: tap, finderType: Descendant, of: {"finderType":"ByType","type":"AlbumsWidget"}, matching: {"finderType":"ByType","type":"FavoriteButton"}, matchRoot: false, firstMatchOnly: true}
2023-03-06 23:21:43.396237 <<< {isError: false, response: {}, type: _extensionType, method: ext.flutter.driver}
